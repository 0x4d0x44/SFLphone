<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2005-09-13T16:56:03" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.4.2</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" xmi.id="2459" isRoot="false" isAbstract="false" name="datatype" />
    <UML:DataType stereotype="2459" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2458" isRoot="false" isAbstract="false" name="int" />
    <UML:DataType stereotype="2459" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2460" isRoot="false" isAbstract="false" name="char" />
    <UML:DataType stereotype="2459" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2461" isRoot="false" isAbstract="false" name="bool" />
    <UML:DataType stereotype="2459" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2462" isRoot="false" isAbstract="false" name="float" />
    <UML:DataType stereotype="2459" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2463" isRoot="false" isAbstract="false" name="double" />
    <UML:DataType stereotype="2459" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2464" isRoot="false" isAbstract="false" name="long" />
    <UML:DataType stereotype="2459" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2465" isRoot="false" isAbstract="false" name="short" />
    <UML:DataType stereotype="2459" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2466" isRoot="false" isAbstract="false" name="string" />
    <UML:DataType stereotype="2459" isSpecification="false" isLeaf="false" visibility="public" xmi.id="2470" isRoot="false" isAbstract="false" name="void" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="2467" isRoot="false" isAbstract="false" name="SFLClient" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2556" isRoot="false" isAbstract="false" name="version" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="5642" type="2466" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2569" isRoot="false" isAbstract="false" name="connect" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="5643" type="3277" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3437" isRoot="false" isAbstract="false" name="disconnect" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2611" isRoot="false" isAbstract="false" name="listConfig" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="5644" type="2585" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2655" isRoot="false" isAbstract="false" name="setOption" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="2656" isRoot="false" value="" type="2466" isAbstract="false" name="name" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="2660" isRoot="false" value="" type="2466" isAbstract="false" name="value" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2670" isRoot="false" isAbstract="false" name="getOption" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="5645" type="2466" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="2671" isRoot="false" value="" type="2466" isAbstract="false" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2687" isRoot="false" isAbstract="false" name="saveConfig" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2700" isRoot="false" isAbstract="false" name="listAudioDevices" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="5646" type="2466" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2716" isRoot="false" isAbstract="false" name="listAudioCodecs" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="5647" type="2466" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2826" isRoot="false" isAbstract="false" name="listAccounts" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="5648" type="2466" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2834" isRoot="false" isAbstract="false" name="getAccount" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="5649" type="2521" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="2835" isRoot="false" value="" type="2466" isAbstract="false" name="name" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3508" isRoot="false" isAbstract="false" name="handleEvents" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="3509" isRoot="false" value="false" type="2461" isAbstract="false" name="detach" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="2468" isRoot="false" isAbstract="false" name="Call" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="2502" isRoot="false" initialValue="" type="2458" isAbstract="false" name="transfer" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2487" isRoot="false" isAbstract="false" name="hangup" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2490" isRoot="false" isAbstract="false" name="cancel" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2493" isRoot="false" isAbstract="false" name="answer" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2496" isRoot="false" isAbstract="false" name="hold" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2499" isRoot="false" isAbstract="false" name="unhold" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2506" isRoot="false" isAbstract="false" name="refuse" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2509" isRoot="false" isAbstract="false" name="sendDtmf" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="2513" isRoot="false" value="" type="2460" isAbstract="false" name="code" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="2521" isRoot="false" isAbstract="false" name="Account" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2524" isRoot="false" isAbstract="false" name="call" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="5650" type="2468" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="2525" isRoot="false" value="" type="2466" isAbstract="false" name="to" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2794" isRoot="false" isAbstract="false" name="register" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="2807" isRoot="false" isAbstract="false" name="unregister" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="2585" isRoot="false" isAbstract="false" name="ConfigEntry" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" isLeaf="false" visibility="public" xmi.id="2591" isRoot="false" initialValue="" type="2466" isAbstract="false" name="mVariableName" />
      <UML:Attribute isSpecification="false" isLeaf="false" visibility="public" xmi.id="2596" isRoot="false" initialValue="" type="2466" isAbstract="false" name="mType" />
      <UML:Attribute isSpecification="false" isLeaf="false" visibility="public" xmi.id="2599" isRoot="false" initialValue="" type="2466" isAbstract="false" name="mDefault" />
      <UML:Attribute isSpecification="false" isLeaf="false" visibility="public" xmi.id="2602" isRoot="false" initialValue="" type="2466" isAbstract="false" name="mValue" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="2999" isRoot="false" isAbstract="false" name="CallTask" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3033" isRoot="false" isAbstract="false" name="Task" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="3034" isRoot="false" value="" type="T" isAbstract="false" name="userType" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3083" isRoot="false" isAbstract="false" name="onError" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="3711" isRoot="false" value="" type="2468" isAbstract="false" name="call" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="3721" isRoot="false" value="" type="2458" isAbstract="false" name="code" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="3731" isRoot="false" value="" type="2466" isAbstract="false" name="message" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3156" isRoot="false" isAbstract="false" name="onSuccess" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="3186" isRoot="false" value="" type="2468" isAbstract="false" name="call" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="3166" isRoot="false" value="" type="2458" isAbstract="false" name="code" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="3176" isRoot="false" value="" type="2466" isAbstract="false" name="message" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="3277" isRoot="false" isAbstract="false" name="Session" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3334" isRoot="false" isAbstract="false" name="handleEvents" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="3335" isRoot="false" value="false" type="2461" isAbstract="false" name="detach" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="3406" isRoot="false" isAbstract="false" name="disconnect" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="3600" isRoot="false" isAbstract="false" name="TaskFactory" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="4219" isRoot="false" isAbstract="false" name="createHoldTask" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="5651" type="3814" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="3611" isRoot="false" isAbstract="false" name="TaskManager" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="3927" isRoot="false" initialValue="" type="3600" isAbstract="false" name="mFactory" />
      <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="4600" isRoot="false" isAbstract="false" name="getTaskFactory" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter kind="return" xmi.id="5652" type="3600" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="3804" isRoot="false" isAbstract="false" name="new_class" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="3814" isRoot="false" isAbstract="false" name="HoldTask" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="3851" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4129" isRoot="false" isAbstract="false" name="ApplicationTaskFactory" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="4171" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4821" isRoot="false" isAbstract="false" name="UnHoldTask" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="5029" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4844" isRoot="false" isAbstract="false" name="CancelTask" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="5004" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4856" isRoot="false" isAbstract="false" name="AnswerTask" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="4979" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4868" isRoot="false" isAbstract="false" name="HangupTask" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="4954" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4880" isRoot="false" isAbstract="false" name="RefuseTask" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="4929" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4892" isRoot="false" isAbstract="false" name="SendDtmfTask" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="4904" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5065" isRoot="false" isAbstract="false" name="ListTask" >
     <UML:Classifier.feature>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5143" isRoot="false" isAbstract="false" name="onEntry" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5144" isRoot="false" value="" type="2458" isAbstract="false" name="code" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5156" isRoot="false" value="" type="2458" isAbstract="false" name="index" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5179" isRoot="false" value="" type="2466" isAbstract="false" name="value" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5224" isRoot="false" isAbstract="false" name="onEnd" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5225" isRoot="false" value="" type="2458" isAbstract="false" name="code" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5237" isRoot="false" value="" type="2466" isAbstract="false" name="message" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
      <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5304" isRoot="false" isAbstract="false" name="onError" >
       <UML:BehavioralFeature.parameter>
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5305" isRoot="false" value="" type="2458" isAbstract="false" name="code" />
        <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5317" isRoot="false" value="" type="2466" isAbstract="false" name="message" />
       </UML:BehavioralFeature.parameter>
      </UML:Operation>
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5428" isRoot="false" isAbstract="false" name="ListConfigTask" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="5440" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5465" isRoot="false" isAbstract="false" name="ListAudioDevicesTask" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="5584" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5477" isRoot="false" isAbstract="false" name="ListAudioCodecsTask" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="5534" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5489" isRoot="false" isAbstract="false" name="ListAccountsTask" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="5559" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Association isSpecification="false" visibility="public" xmi.id="2539" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="2540" aggregation="none" type="2521" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="2541" aggregation="none" type="2468" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Association isSpecification="false" visibility="public" xmi.id="2899" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="false" xmi.id="2900" aggregation="none" type="2467" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="2901" aggregation="none" type="2521" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Generalization isSpecification="false" child="3814" visibility="public" xmi.id="3851" parent="2999" discriminator="" name="" />
    <UML:Association isSpecification="false" visibility="public" xmi.id="3955" name="" >
     <UML:Association.connection>
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="3956" aggregation="composite" type="3600" name="" />
      <UML:AssociationEnd isSpecification="false" visibility="public" changeability="changeable" isNavigable="true" xmi.id="3957" aggregation="none" type="3611" name="" />
     </UML:Association.connection>
    </UML:Association>
    <UML:Generalization isSpecification="false" child="4129" visibility="public" xmi.id="4171" parent="3600" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="4892" visibility="public" xmi.id="4904" parent="2999" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="4880" visibility="public" xmi.id="4929" parent="2999" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="4868" visibility="public" xmi.id="4954" parent="2999" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="4856" visibility="public" xmi.id="4979" parent="2999" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="4844" visibility="public" xmi.id="5004" parent="2999" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="4821" visibility="public" xmi.id="5029" parent="2999" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5428" visibility="public" xmi.id="5440" parent="5065" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5477" visibility="public" xmi.id="5534" parent="5065" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5489" visibility="public" xmi.id="5559" parent="5065" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5465" visibility="public" xmi.id="5584" parent="5065" discriminator="" name="" />
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="2457" documentation="" uniqueid="5652" />
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1198" snapy="10" showatts="1" xmi.id="2457" documentation="" type="402" showops="1" showpackage="0" name="class diagram" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="847" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="272" showattsigs="601" usesdiagramusefillcolour="0" x="756" linecolour="#ff0000" y="30" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="202" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="2467" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="165" showattsigs="601" usesdiagramusefillcolour="0" x="699" linecolour="#ff0000" y="383" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="135" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="2468" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="155" showattsigs="601" usesdiagramusefillcolour="0" x="704" linecolour="#ff0000" y="262" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="67" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="2521" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="162" showattsigs="601" usesdiagramusefillcolour="0" x="1032" linecolour="#ff0000" y="290" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="82" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="2585" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="343" showattsigs="601" usesdiagramusefillcolour="0" x="7" linecolour="#ff0000" y="364" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="67" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="2999" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="204" showattsigs="601" usesdiagramusefillcolour="1" x="24" linecolour="none" y="148" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="37" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="3600" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="218" showattsigs="601" usesdiagramusefillcolour="0" x="17" linecolour="#ff0000" y="19" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="45" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="3611" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="69" showattsigs="601" usesdiagramusefillcolour="1" x="36" linecolour="none" y="469" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="3814" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="160" showattsigs="601" usesdiagramusefillcolour="1" x="46" linecolour="none" y="265" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="4129" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="86" showattsigs="601" usesdiagramusefillcolour="1" x="153" linecolour="none" y="475" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="4821" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="84" showattsigs="601" usesdiagramusefillcolour="1" x="287" linecolour="none" y="475" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="4844" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="88" showattsigs="601" usesdiagramusefillcolour="1" x="394" linecolour="none" y="436" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="4856" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="89" showattsigs="601" usesdiagramusefillcolour="1" x="382" linecolour="none" y="376" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="4868" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="84" showattsigs="601" usesdiagramusefillcolour="1" x="366" linecolour="none" y="325" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="4880" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="102" showattsigs="601" usesdiagramusefillcolour="1" x="260" linecolour="none" y="295" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="4892" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="306" showattsigs="601" usesdiagramusefillcolour="1" x="76" linecolour="none" y="613" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="67" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="5065" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="105" showattsigs="601" usesdiagramusefillcolour="1" x="145" linecolour="none" y="781" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="5428" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="149" showattsigs="601" usesdiagramusefillcolour="1" x="21" linecolour="none" y="719" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="5465" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="146" showattsigs="601" usesdiagramusefillcolour="1" x="285" linecolour="none" y="770" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="5477" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="121" showattsigs="601" usesdiagramusefillcolour="1" x="203" linecolour="none" y="814" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="5489" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="2468" widgetaid="2521" xmi.id="2539" >
      <linepath>
       <startpoint startx="781" starty="329" />
       <endpoint endx="781" endy="383" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="2521" widgetaid="2467" xmi.id="2899" >
      <linepath>
       <startpoint startx="892" starty="232" />
       <endpoint endx="781" endy="262" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="1" widgetbid="2999" widgetaid="3814" xmi.id="3851" >
      <linepath>
       <startpoint startx="70" starty="469" />
       <endpoint endx="75" endy="431" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="201" totalcountb="2" indexb="1" widgetbid="3600" widgetaid="3611" xmi.id="3927" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="126" starty="64" />
       <endpoint endx="126" endy="148" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="64" usesdiagramusefillcolour="1" x="109" linecolour="none" y="127" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="19" usefillcolor="1" pretext="-" isinstance="0" xmi.id="4134" text="mFactory" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="3600" widgetaid="4129" xmi.id="4171" >
      <linepath>
       <startpoint startx="126" starty="265" />
       <endpoint endx="126" endy="185" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="2999" widgetaid="4892" xmi.id="4904" >
      <linepath>
       <startpoint startx="311" starty="324" />
       <endpoint endx="121" endy="364" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="2999" widgetaid="4880" xmi.id="4929" >
      <linepath>
       <startpoint startx="366" starty="339" />
       <endpoint endx="235" endy="364" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="2999" widgetaid="4868" xmi.id="4954" >
      <linepath>
       <startpoint startx="382" starty="390" />
       <endpoint endx="350" endy="397" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="4" widgetbid="2999" widgetaid="4856" xmi.id="4979" >
      <linepath>
       <startpoint startx="394" starty="450" />
       <endpoint endx="281" endy="431" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="3" widgetbid="2999" widgetaid="4844" xmi.id="5004" >
      <linepath>
       <startpoint startx="329" starty="475" />
       <endpoint endx="212" endy="431" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="2" widgetbid="2999" widgetaid="4821" xmi.id="5029" >
      <linepath>
       <startpoint startx="196" starty="475" />
       <endpoint endx="144" endy="431" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="2" widgetbid="5065" widgetaid="5428" xmi.id="5440" >
      <linepath>
       <startpoint startx="197" starty="781" />
       <endpoint endx="198" endy="680" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="4" widgetbid="5065" widgetaid="5477" xmi.id="5534" >
      <linepath>
       <startpoint startx="358" starty="770" />
       <endpoint endx="320" endy="680" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="3" widgetbid="5065" widgetaid="5489" xmi.id="5559" >
      <linepath>
       <startpoint startx="263" starty="814" />
       <endpoint endx="259" endy="680" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="5" indexb="1" widgetbid="5065" widgetaid="5465" xmi.id="5584" >
      <linepath>
       <startpoint startx="95" starty="719" />
       <endpoint endx="137" endy="680" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" label="Views" >
    <listitem open="1" type="801" label="Logical View" >
     <listitem open="1" type="813" id="2521" >
      <listitem open="0" type="815" id="2524" />
      <listitem open="0" type="815" id="2794" />
      <listitem open="0" type="815" id="2807" />
     </listitem>
     <listitem open="1" type="813" id="4856" />
     <listitem open="1" type="813" id="4129" />
     <listitem open="1" type="813" id="2468" >
      <listitem open="0" type="814" id="2502" />
      <listitem open="0" type="815" id="2487" />
      <listitem open="0" type="815" id="2490" />
      <listitem open="0" type="815" id="2493" />
      <listitem open="0" type="815" id="2496" />
      <listitem open="0" type="815" id="2499" />
      <listitem open="0" type="815" id="2506" />
      <listitem open="0" type="815" id="2509" />
     </listitem>
     <listitem open="1" type="813" id="2999" >
      <listitem open="0" type="815" id="3033" />
      <listitem open="0" type="815" id="3083" />
      <listitem open="0" type="815" id="3156" />
     </listitem>
     <listitem open="1" type="813" id="4844" />
     <listitem open="1" type="813" id="2585" >
      <listitem open="0" type="814" id="2591" />
      <listitem open="0" type="814" id="2596" />
      <listitem open="0" type="814" id="2599" />
      <listitem open="0" type="814" id="2602" />
     </listitem>
     <listitem open="1" type="813" id="4868" />
     <listitem open="1" type="813" id="3814" />
     <listitem open="1" type="813" id="5489" />
     <listitem open="1" type="813" id="5477" />
     <listitem open="1" type="813" id="5465" />
     <listitem open="1" type="813" id="5428" />
     <listitem open="1" type="813" id="5065" >
      <listitem open="0" type="815" id="5143" />
      <listitem open="0" type="815" id="5224" />
      <listitem open="0" type="815" id="5304" />
     </listitem>
     <listitem open="1" type="813" id="4880" />
     <listitem open="1" type="813" id="2467" >
      <listitem open="0" type="815" id="2556" />
      <listitem open="0" type="815" id="2569" />
      <listitem open="0" type="815" id="3437" />
      <listitem open="0" type="815" id="2611" />
      <listitem open="0" type="815" id="2655" />
      <listitem open="0" type="815" id="2670" />
      <listitem open="0" type="815" id="2687" />
      <listitem open="0" type="815" id="2700" />
      <listitem open="0" type="815" id="2716" />
      <listitem open="0" type="815" id="2826" />
      <listitem open="0" type="815" id="2834" />
      <listitem open="0" type="815" id="3508" />
     </listitem>
     <listitem open="1" type="813" id="4892" />
     <listitem open="1" type="813" id="3277" >
      <listitem open="0" type="815" id="3334" />
      <listitem open="0" type="815" id="3406" />
     </listitem>
     <listitem open="1" type="813" id="3600" >
      <listitem open="0" type="815" id="4219" />
     </listitem>
     <listitem open="1" type="813" id="3611" >
      <listitem open="0" type="814" id="3927" />
      <listitem open="0" type="815" id="4600" />
     </listitem>
     <listitem open="1" type="813" id="4821" />
     <listitem open="1" type="813" id="3804" />
     <listitem open="1" type="830" label="Datatypes" >
      <listitem open="1" type="829" id="2461" />
      <listitem open="1" type="829" id="2460" />
      <listitem open="1" type="829" id="2463" />
      <listitem open="1" type="829" id="2462" />
      <listitem open="1" type="829" id="2458" />
      <listitem open="1" type="829" id="2464" />
      <listitem open="1" type="829" id="2465" />
      <listitem open="1" type="829" id="2466" />
      <listitem open="1" type="829" id="2470" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" label="Use Case View" />
    <listitem open="1" type="821" label="Component View" />
    <listitem open="1" type="827" label="Deployment View" />
    <listitem open="1" type="836" label="Entity Relationship Model" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Cpp" >
    <classifiercodedocument writeOutCode="true" package="" id="2467" parent_class="2467" fileExt=".cpp" fileName="sflclient" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;sflclient.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="2556" tag="operation_2556" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2569" tag="operation_2569" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2611" tag="operation_2611" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2655" tag="operation_2655" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2670" tag="operation_2670" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2687" tag="operation_2687" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2700" tag="operation_2700" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2716" tag="operation_2716" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2826" tag="operation_2826" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2834" tag="operation_2834" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="3437" tag="operation_3437" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="3508" tag="operation_3508" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			sflclient.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:52:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="2468" parent_class="2468" fileExt=".cpp" fileName="call" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;call.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="2487" tag="operation_2487" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2490" tag="operation_2490" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2493" tag="operation_2493" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2496" tag="operation_2496" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2499" tag="operation_2499" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="2502" tag="hblock_tag_0" canDelete="false" classfield_id="2502" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2502" tag="hblock_tag_1" canDelete="false" classfield_id="2502" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="2506" tag="operation_2506" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2509" tag="operation_2509" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			call.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:56:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="2502" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2502" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2502" tag="hblock_tag_0" canDelete="false" classfield_id="2502" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2502" tag="hblock_tag_1" canDelete="false" classfield_id="2502" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="2521" parent_class="2521" fileExt=".cpp" fileName="account" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;account.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="2524" tag="operation_2524" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2794" tag="operation_2794" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="2807" tag="operation_2807" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			account.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:56:34&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="2585" parent_class="2585" fileExt=".cpp" fileName="configentry" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;configentry.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="2591" tag="hblock_tag_0" canDelete="false" classfield_id="2591" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2591" tag="hblock_tag_1" canDelete="false" classfield_id="2591" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="2596" tag="hblock_tag_2" canDelete="false" classfield_id="2596" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2596" tag="hblock_tag_3" canDelete="false" classfield_id="2596" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="2599" tag="hblock_tag_4" canDelete="false" classfield_id="2599" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2599" tag="hblock_tag_5" canDelete="false" classfield_id="2599" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="2602" tag="hblock_tag_6" canDelete="false" classfield_id="2602" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="2602" tag="hblock_tag_7" canDelete="false" classfield_id="2602" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			configentry.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:52:43&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="2591" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2591" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2591" tag="hblock_tag_0" canDelete="false" classfield_id="2591" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2591" tag="hblock_tag_1" canDelete="false" classfield_id="2591" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2596" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2596" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2596" tag="hblock_tag_2" canDelete="false" classfield_id="2596" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2596" tag="hblock_tag_3" canDelete="false" classfield_id="2596" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2599" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2599" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2599" tag="hblock_tag_4" canDelete="false" classfield_id="2599" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2599" tag="hblock_tag_5" canDelete="false" classfield_id="2599" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2602" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2602" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2602" tag="hblock_tag_6" canDelete="false" classfield_id="2602" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2602" tag="hblock_tag_7" canDelete="false" classfield_id="2602" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
     <textblocks/>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
    <classifiercodedocument writeOutCode="true" package="" id="2999" parent_class="2999" fileExt=".cpp" fileName="calltask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;calltask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="3033" tag="operation_3033" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="3083" tag="operation_3083" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="3156" tag="operation_3156" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			calltask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:49:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="3851" field_type="72" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="3851" tag="" canDelete="false" writeOutText="false" classfield_id="3851" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="3851" tag="" canDelete="false" writeOutText="false" classfield_id="3851" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="3851" tag="" canDelete="false" writeOutText="false" classfield_id="3851" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="3851" tag="" canDelete="false" writeOutText="false" classfield_id="3851" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="3851" tag="" canDelete="false" writeOutText="false" classfield_id="3851" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4904" field_type="2097268" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4904" tag="" canDelete="false" writeOutText="false" classfield_id="4904" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4904" tag="" canDelete="false" writeOutText="false" classfield_id="4904" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4904" tag="" canDelete="false" writeOutText="false" classfield_id="4904" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4904" tag="" canDelete="false" writeOutText="false" classfield_id="4904" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4904" tag="" canDelete="false" writeOutText="false" classfield_id="4904" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4929" field_type="2097268" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4929" tag="" canDelete="false" writeOutText="false" classfield_id="4929" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4929" tag="" canDelete="false" writeOutText="false" classfield_id="4929" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4929" tag="" canDelete="false" writeOutText="false" classfield_id="4929" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4929" tag="" canDelete="false" writeOutText="false" classfield_id="4929" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4929" tag="" canDelete="false" writeOutText="false" classfield_id="4929" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4954" field_type="2097268" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4954" tag="" canDelete="false" writeOutText="false" classfield_id="4954" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4954" tag="" canDelete="false" writeOutText="false" classfield_id="4954" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4954" tag="" canDelete="false" writeOutText="false" classfield_id="4954" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4954" tag="" canDelete="false" writeOutText="false" classfield_id="4954" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4954" tag="" canDelete="false" writeOutText="false" classfield_id="4954" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4979" field_type="2097268" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4979" tag="" canDelete="false" writeOutText="false" classfield_id="4979" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4979" tag="" canDelete="false" writeOutText="false" classfield_id="4979" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4979" tag="" canDelete="false" writeOutText="false" classfield_id="4979" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4979" tag="" canDelete="false" writeOutText="false" classfield_id="4979" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4979" tag="" canDelete="false" writeOutText="false" classfield_id="4979" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5004" field_type="2097268" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5004" tag="" canDelete="false" writeOutText="false" classfield_id="5004" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5004" tag="" canDelete="false" writeOutText="false" classfield_id="5004" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5004" tag="" canDelete="false" writeOutText="false" classfield_id="5004" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5004" tag="" canDelete="false" writeOutText="false" classfield_id="5004" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5004" tag="" canDelete="false" writeOutText="false" classfield_id="5004" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5029" field_type="2097268" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5029" tag="" canDelete="false" writeOutText="false" classfield_id="5029" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5029" tag="" canDelete="false" writeOutText="false" classfield_id="5029" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5029" tag="" canDelete="false" writeOutText="false" classfield_id="5029" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5029" tag="" canDelete="false" writeOutText="false" classfield_id="5029" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5029" tag="" canDelete="false" writeOutText="false" classfield_id="5029" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="3277" parent_class="3277" fileExt=".cpp" fileName="session" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;session.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="3334" tag="operation_3334" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="3406" tag="operation_3406" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			session.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:19:31&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="3600" parent_class="3600" fileExt=".cpp" fileName="taskfactory" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;taskfactory.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="3955" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="3955" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="3955" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="3955" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="3955" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="3955" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="3955" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="3955" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="3955" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="3955" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="4219" tag="operation_4219" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			taskfactory.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:55:21&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="3955" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="3955" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="3955" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="3955" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="3955" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="3955" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="3955" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="3955" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="3955" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="3955" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="3955" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="3955" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4171" field_type="655370" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4171" tag="" canDelete="false" writeOutText="false" classfield_id="4171" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4171" tag="" canDelete="false" writeOutText="false" classfield_id="4171" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4171" tag="" canDelete="false" writeOutText="false" classfield_id="4171" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4171" tag="" canDelete="false" writeOutText="false" classfield_id="4171" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4171" tag="" canDelete="false" writeOutText="false" classfield_id="4171" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="3611" parent_class="3611" fileExt=".cpp" fileName="taskmanager" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;taskmanager.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="3927" tag="hblock_tag_0" canDelete="false" classfield_id="3927" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="3927" tag="hblock_tag_1" canDelete="false" classfield_id="3927" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="3955" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="3955" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="3955" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="3955" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="3955" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="3955" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="3955" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="3955" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="3955" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="3955" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="4600" tag="operation_4600" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			taskmanager.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:58:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="3927" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="3927" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="3927" tag="hblock_tag_0" canDelete="false" classfield_id="3927" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="3927" tag="hblock_tag_1" canDelete="false" classfield_id="3927" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="3955" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="3955" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="3955" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="3955" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="3955" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="3955" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="3955" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="3955" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="3955" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="3955" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="3955" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="3955" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="3804" parent_class="3804" fileExt=".cpp" fileName="new_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;new_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			new_class.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:47:01&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="3814" parent_class="3814" fileExt=".cpp" fileName="holdtask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;holdtask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			holdtask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:59:37&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="3851" field_type="6750318" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="3851" tag="" canDelete="false" writeOutText="false" classfield_id="3851" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="3851" tag="" canDelete="false" writeOutText="false" classfield_id="3851" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="3851" tag="" canDelete="false" writeOutText="false" classfield_id="3851" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="3851" tag="" canDelete="false" writeOutText="false" classfield_id="3851" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="3851" tag="" canDelete="false" writeOutText="false" classfield_id="3851" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="4129" parent_class="4129" fileExt=".cpp" fileName="applicationtaskfactory" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;applicationtaskfactory.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			applicationtaskfactory.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:59:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4171" field_type="2818080" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4171" tag="" canDelete="false" writeOutText="false" classfield_id="4171" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4171" tag="" canDelete="false" writeOutText="false" classfield_id="4171" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4171" tag="" canDelete="false" writeOutText="false" classfield_id="4171" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4171" tag="" canDelete="false" writeOutText="false" classfield_id="4171" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4171" tag="" canDelete="false" writeOutText="false" classfield_id="4171" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="4821" parent_class="4821" fileExt=".cpp" fileName="unholdtask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;unholdtask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			unholdtask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:00:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5029" field_type="4718670" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5029" tag="" canDelete="false" writeOutText="false" classfield_id="5029" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5029" tag="" canDelete="false" writeOutText="false" classfield_id="5029" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5029" tag="" canDelete="false" writeOutText="false" classfield_id="5029" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5029" tag="" canDelete="false" writeOutText="false" classfield_id="5029" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5029" tag="" canDelete="false" writeOutText="false" classfield_id="5029" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="4844" parent_class="4844" fileExt=".cpp" fileName="canceltask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;canceltask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			canceltask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:00:42&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5004" field_type="5111873" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5004" tag="" canDelete="false" writeOutText="false" classfield_id="5004" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5004" tag="" canDelete="false" writeOutText="false" classfield_id="5004" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5004" tag="" canDelete="false" writeOutText="false" classfield_id="5004" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5004" tag="" canDelete="false" writeOutText="false" classfield_id="5004" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5004" tag="" canDelete="false" writeOutText="false" classfield_id="5004" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="4856" parent_class="4856" fileExt=".cpp" fileName="answertask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;answertask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			answertask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:00:40&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4979" field_type="5439566" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4979" tag="" canDelete="false" writeOutText="false" classfield_id="4979" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4979" tag="" canDelete="false" writeOutText="false" classfield_id="4979" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4979" tag="" canDelete="false" writeOutText="false" classfield_id="4979" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4979" tag="" canDelete="false" writeOutText="false" classfield_id="4979" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4979" tag="" canDelete="false" writeOutText="false" classfield_id="4979" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="4868" parent_class="4868" fileExt=".cpp" fileName="hanguptask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;hanguptask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			hanguptask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:00:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4954" field_type="5111873" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4954" tag="" canDelete="false" writeOutText="false" classfield_id="4954" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4954" tag="" canDelete="false" writeOutText="false" classfield_id="4954" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4954" tag="" canDelete="false" writeOutText="false" classfield_id="4954" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4954" tag="" canDelete="false" writeOutText="false" classfield_id="4954" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4954" tag="" canDelete="false" writeOutText="false" classfield_id="4954" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="4880" parent_class="4880" fileExt=".cpp" fileName="refusetask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;refusetask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			refusetask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:54:37&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4929" field_type="4587589" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4929" tag="" canDelete="false" writeOutText="false" classfield_id="4929" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4929" tag="" canDelete="false" writeOutText="false" classfield_id="4929" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4929" tag="" canDelete="false" writeOutText="false" classfield_id="4929" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4929" tag="" canDelete="false" writeOutText="false" classfield_id="4929" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4929" tag="" canDelete="false" writeOutText="false" classfield_id="4929" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="4892" parent_class="4892" fileExt=".cpp" fileName="senddtmftask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;senddtmftask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			senddtmftask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:00:37&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4904" field_type="5439520" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4904" tag="" canDelete="false" writeOutText="false" classfield_id="4904" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4904" tag="" canDelete="false" writeOutText="false" classfield_id="4904" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4904" tag="" canDelete="false" writeOutText="false" classfield_id="4904" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4904" tag="" canDelete="false" writeOutText="false" classfield_id="4904" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4904" tag="" canDelete="false" writeOutText="false" classfield_id="4904" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5065" parent_class="5065" fileExt=".cpp" fileName="listtask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;listtask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5143" tag="operation_5143" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5224" tag="operation_5224" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5304" tag="operation_5304" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			listtask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:55:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5440" field_type="2097255" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5440" tag="" canDelete="false" writeOutText="false" classfield_id="5440" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5440" tag="" canDelete="false" writeOutText="false" classfield_id="5440" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5440" tag="" canDelete="false" writeOutText="false" classfield_id="5440" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5440" tag="" canDelete="false" writeOutText="false" classfield_id="5440" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5440" tag="" canDelete="false" writeOutText="false" classfield_id="5440" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5534" field_type="6619245" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5534" tag="" canDelete="false" writeOutText="false" classfield_id="5534" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5534" tag="" canDelete="false" writeOutText="false" classfield_id="5534" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5534" tag="" canDelete="false" writeOutText="false" classfield_id="5534" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5534" tag="" canDelete="false" writeOutText="false" classfield_id="5534" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5534" tag="" canDelete="false" writeOutText="false" classfield_id="5534" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5559" field_type="6619245" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5559" tag="" canDelete="false" writeOutText="false" classfield_id="5559" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5559" tag="" canDelete="false" writeOutText="false" classfield_id="5559" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5559" tag="" canDelete="false" writeOutText="false" classfield_id="5559" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5559" tag="" canDelete="false" writeOutText="false" classfield_id="5559" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5559" tag="" canDelete="false" writeOutText="false" classfield_id="5559" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5584" field_type="6619245" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5584" tag="" canDelete="false" writeOutText="false" classfield_id="5584" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5584" tag="" canDelete="false" writeOutText="false" classfield_id="5584" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5584" tag="" canDelete="false" writeOutText="false" classfield_id="5584" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5584" tag="" canDelete="false" writeOutText="false" classfield_id="5584" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5584" tag="" canDelete="false" writeOutText="false" classfield_id="5584" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5428" parent_class="5428" fileExt=".cpp" fileName="listconfigtask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;listconfigtask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			listconfigtask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:54:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5440" field_type="16" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5440" tag="" canDelete="false" writeOutText="false" classfield_id="5440" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5440" tag="" canDelete="false" writeOutText="false" classfield_id="5440" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5440" tag="" canDelete="false" writeOutText="false" classfield_id="5440" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5440" tag="" canDelete="false" writeOutText="false" classfield_id="5440" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5440" tag="" canDelete="false" writeOutText="false" classfield_id="5440" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5465" parent_class="5465" fileExt=".cpp" fileName="listaudiodevicestask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;listaudiodevicestask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			listaudiodevicestask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:54:36&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5584" field_type="2293770" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5584" tag="" canDelete="false" writeOutText="false" classfield_id="5584" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5584" tag="" canDelete="false" writeOutText="false" classfield_id="5584" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5584" tag="" canDelete="false" writeOutText="false" classfield_id="5584" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5584" tag="" canDelete="false" writeOutText="false" classfield_id="5584" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5584" tag="" canDelete="false" writeOutText="false" classfield_id="5584" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5477" parent_class="5477" fileExt=".cpp" fileName="listaudiocodecstask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;listaudiocodecstask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			listaudiocodecstask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:54:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5534" field_type="6881382" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5534" tag="" canDelete="false" writeOutText="false" classfield_id="5534" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5534" tag="" canDelete="false" writeOutText="false" classfield_id="5534" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5534" tag="" canDelete="false" writeOutText="false" classfield_id="5534" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5534" tag="" canDelete="false" writeOutText="false" classfield_id="5534" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5534" tag="" canDelete="false" writeOutText="false" classfield_id="5534" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5489" parent_class="5489" fileExt=".cpp" fileName="listaccountstask" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;listaccountstask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			listaccountstask.cpp - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:54:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5559" field_type="5505140" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5559" tag="" canDelete="false" writeOutText="false" classfield_id="5559" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5559" tag="" canDelete="false" writeOutText="false" classfield_id="5559" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5559" tag="" canDelete="false" writeOutText="false" classfield_id="5559" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5559" tag="" canDelete="false" writeOutText="false" classfield_id="5559" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5559" tag="" canDelete="false" writeOutText="false" classfield_id="5559" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader2467" parent_class="2467" fileExt=".h" fileName="sflclient" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SFLCLIENT_H&amp;#010;#define SFLCLIENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;account.h&quot;&amp;#010;#include &quot;session.h&quot;&amp;#010;#include &quot;configentry.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="2467" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class SFLClient&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="SFLClient ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="2556" tag="operation_2556" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2569" tag="operation_2569" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2611" tag="operation_2611" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2655" tag="operation_2655" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param name &amp;#010;@param value " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2670" tag="operation_2670" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param name " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2687" tag="operation_2687" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2700" tag="operation_2700" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2716" tag="operation_2716" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2826" tag="operation_2826" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2834" tag="operation_2834" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param name " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="3437" tag="operation_3437" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="3508" tag="operation_3508" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param detach " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SFLCLIENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			sflclient.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:52:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader2468" parent_class="2468" fileExt=".h" fileName="call" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CALL_H&amp;#010;#define CALL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;account.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="2468" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Call&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Call ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="2487" tag="operation_2487" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2490" tag="operation_2490" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2493" tag="operation_2493" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2496" tag="operation_2496" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2499" tag="operation_2499" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2506" tag="operation_2506" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2509" tag="operation_2509" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param code " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="2502" tag="tblock_0" canDelete="false" indentLevel="1" text=" int transfer;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="2502" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="2502" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2502" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="2502" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CALL_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			call.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:56:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="2502" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2502" tag="tblock_0" canDelete="false" indentLevel="1" text=" int transfer;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2502" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="2502" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2502" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="2502" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader2521" parent_class="2521" fileExt=".h" fileName="account" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ACCOUNT_H&amp;#010;#define ACCOUNT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;call.h&quot;&amp;#010;#include &quot;sflclient.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="2521" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Account&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Account ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="2524" tag="operation_2524" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param to " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2794" tag="operation_2794" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="2807" tag="operation_2807" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ACCOUNT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			account.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:56:34&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader2585" parent_class="2585" fileExt=".h" fileName="configentry" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CONFIGENTRY_H&amp;#010;#define CONFIGENTRY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="2585" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ConfigEntry&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="2591" tag="tblock_0" canDelete="false" indentLevel="1" text=" string mVariableName;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="2596" tag="tblock_1" canDelete="false" indentLevel="1" text=" string mType;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="2599" tag="tblock_2" canDelete="false" indentLevel="1" text=" string mDefault;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="2602" tag="tblock_3" canDelete="false" indentLevel="1" text=" string mValue;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ConfigEntry ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="2591" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="2591" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2591" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="2591" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="2596" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="2596" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2596" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="2596" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="2599" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="2599" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2599" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="2599" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="2602" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="2602" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="2602" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="2602" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CONFIGENTRY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			configentry.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:52:43&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="2591" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2591" tag="tblock_0" canDelete="false" indentLevel="1" text=" string mVariableName;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2591" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="2591" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2591" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="2591" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2596" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2596" tag="tblock_1" canDelete="false" indentLevel="1" text=" string mType;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2596" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="2596" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2596" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="2596" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2599" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2599" tag="tblock_2" canDelete="false" indentLevel="1" text=" string mDefault;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2599" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="2599" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2599" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="2599" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="2602" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="2602" tag="tblock_3" canDelete="false" indentLevel="1" text=" string mValue;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="2602" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="2602" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="2602" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="2602" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader2999" parent_class="2999" fileExt=".h" fileName="calltask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CALLTASK_H&amp;#010;#define CALLTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;call.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="2999" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class CallTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Task ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="3033" tag="operation_3033" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param userType " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="3083" tag="operation_3083" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param call &amp;#010;@param code &amp;#010;@param message " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="3156" tag="operation_3156" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param call &amp;#010;@param code &amp;#010;@param message " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CALLTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			calltask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:49:46&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="3851" field_type="2883692" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" HoldTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3851" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3851" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3851" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3851" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3851" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4904" field_type="7536755" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" SendDtmfTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4904" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4904" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4904" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4904" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4904" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4929" field_type="6881312" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" RefuseTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4929" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4929" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4929" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4929" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4929" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4954" field_type="7536755" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" HangupTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4954" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4954" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4954" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4954" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4954" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4979" field_type="7536755" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" AnswerTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4979" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4979" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4979" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4979" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4979" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5004" field_type="2883692" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" CancelTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5004" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5004" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5004" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5004" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5004" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5029" field_type="7536755" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" UnHoldTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5029" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5029" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5029" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5029" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5029" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader3277" parent_class="3277" fileExt=".h" fileName="session" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SESSION_H&amp;#010;#define SESSION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="3277" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Session&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Session ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="3334" tag="operation_3334" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param detach " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="3406" tag="operation_3406" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SESSION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			session.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:19:31&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader3600" parent_class="3600" fileExt=".h" fileName="taskfactory" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TASKFACTORY_H&amp;#010;#define TASKFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;holdtask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="3600" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class TaskFactory&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="3955" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" TaskManager ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="TaskFactory ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="3955" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="3955" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="3955" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="3955" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="3955" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4219" tag="operation_4219" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TASKFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			taskfactory.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:55:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="3955" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="3955" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" TaskManager ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="3955" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="3955" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="3955" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="3955" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="3955" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4171" field_type="7602273" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" ApplicationTaskFactory ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4171" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4171" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4171" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4171" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4171" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader3611" parent_class="3611" fileExt=".h" fileName="taskmanager" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TASKMANAGER_H&amp;#010;#define TASKMANAGER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;taskfactory.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="3611" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class TaskManager&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="3955" tag="tblock_2" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" TaskFactory ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="TaskManager ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="3955" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="3955" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="3955" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="3955" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="3955" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="3927" tag="tblock_0" canDelete="false" indentLevel="1" text=" TaskFactory mFactory;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="3927" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="3927" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="3927" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="3927" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4600" tag="operation_4600" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TASKMANAGER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			taskmanager.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:58:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="3927" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="3927" tag="tblock_0" canDelete="false" indentLevel="1" text=" TaskFactory mFactory;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="3927" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="3927" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="3927" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="3927" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="3955" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="3955" tag="tblock_2" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" TaskFactory ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="3955" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="3955" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="3955" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="3955" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="3955" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3955" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader3804" parent_class="3804" fileExt=".h" fileName="new_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef NEW_CLASS_H&amp;#010;#define NEW_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="3804" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class new_class&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="new_class ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //NEW_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			new_class.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:47:01&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader3814" parent_class="3814" fileExt=".h" fileName="holdtask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef HOLDTASK_H&amp;#010;#define HOLDTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;task.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="3814" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class HoldTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="HoldTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //HOLDTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			holdtask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:59:37&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="3851" field_type="2621472" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Task ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3851" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3851" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3851" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3851" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="3851" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="3851" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader4129" parent_class="4129" fileExt=".h" fileName="applicationtaskfactory" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef APPLICATIONTASKFACTORY_H&amp;#010;#define APPLICATIONTASKFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;taskfactory.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4129" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ApplicationTaskFactory&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ApplicationTaskFactory ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //APPLICATIONTASKFACTORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			applicationtaskfactory.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 15:59:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4171" field_type="6750266" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" TaskFactory ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4171" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4171" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4171" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4171" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4171" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4171" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader4821" parent_class="4821" fileExt=".h" fileName="unholdtask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UNHOLDTASK_H&amp;#010;#define UNHOLDTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;task.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4821" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UnHoldTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="UnHoldTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UNHOLDTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			unholdtask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:00:52&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5029" field_type="7602291" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Task ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5029" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5029" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5029" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5029" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5029" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5029" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader4844" parent_class="4844" fileExt=".h" fileName="canceltask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CANCELTASK_H&amp;#010;#define CANCELTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;task.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4844" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class CancelTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="CancelTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CANCELTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			canceltask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:00:42&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5004" field_type="7602291" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Task ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5004" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5004" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5004" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5004" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5004" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5004" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader4856" parent_class="4856" fileExt=".h" fileName="answertask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ANSWERTASK_H&amp;#010;#define ANSWERTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;task.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4856" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class AnswerTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="AnswerTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ANSWERTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			answertask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:00:40&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4979" field_type="7602291" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Task ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4979" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4979" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4979" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4979" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4979" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4979" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader4868" parent_class="4868" fileExt=".h" fileName="hanguptask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef HANGUPTASK_H&amp;#010;#define HANGUPTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;task.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4868" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class HangupTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="HangupTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //HANGUPTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			hanguptask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:00:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4954" field_type="7602291" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Task ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4954" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4954" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4954" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4954" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4954" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4954" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader4880" parent_class="4880" fileExt=".h" fileName="refusetask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef REFUSETASK_H&amp;#010;#define REFUSETASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;calltask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4880" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class RefuseTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="RefuseTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //REFUSETASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			refusetask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:54:37&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4929" field_type="7602291" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" CallTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4929" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4929" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4929" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4929" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4929" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4929" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader4892" parent_class="4892" fileExt=".h" fileName="senddtmftask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SENDDTMFTASK_H&amp;#010;#define SENDDTMFTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;task.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4892" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class SendDtmfTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="SendDtmfTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SENDDTMFTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			senddtmftask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:00:37&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4904" field_type="6881388" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Task ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4904" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4904" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4904" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4904" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="4904" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="4904" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5065" parent_class="5065" fileExt=".h" fileName="listtask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LISTTASK_H&amp;#010;#define LISTTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5065" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ListTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ListTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5143" tag="operation_5143" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param code &amp;#010;@param index &amp;#010;@param value " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5224" tag="operation_5224" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param code &amp;#010;@param message " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5304" tag="operation_5304" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param code &amp;#010;@param message " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LISTTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			listtask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:55:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5440" field_type="7667820" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" ListConfigTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5440" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5440" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5440" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5440" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5440" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5534" field_type="7012467" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" ListAudioCodecsTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5534" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5534" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5534" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5534" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5534" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5559" field_type="2097196" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" ListAccountsTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5559" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5559" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5559" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5559" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5559" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5584" field_type="2097196" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" ListAudioDevicesTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5584" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5584" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5584" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5584" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5584" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5428" parent_class="5428" fileExt=".h" fileName="listconfigtask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LISTCONFIGTASK_H&amp;#010;#define LISTCONFIGTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;listtask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5428" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ListConfigTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ListConfigTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LISTCONFIGTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			listconfigtask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:54:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5440" field_type="5505140" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ListTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5440" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5440" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5440" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5440" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5440" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5440" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5465" parent_class="5465" fileExt=".h" fileName="listaudiodevicestask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LISTAUDIODEVICESTASK_H&amp;#010;#define LISTAUDIODEVICESTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;listtask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5465" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ListAudioDevicesTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ListAudioDevicesTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LISTAUDIODEVICESTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			listaudiodevicestask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:54:36&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5584" field_type="7602277" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ListTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5584" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5584" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5584" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5584" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5584" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5584" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5477" parent_class="5477" fileExt=".h" fileName="listaudiocodecstask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LISTAUDIOCODECSTASK_H&amp;#010;#define LISTAUDIOCODECSTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;listtask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5477" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ListAudioCodecsTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ListAudioCodecsTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LISTAUDIOCODECSTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			listaudiocodecstask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:54:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5534" field_type="6226036" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ListTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5534" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5534" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5534" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5534" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5534" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5534" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5489" parent_class="5489" fileExt=".h" fileName="listaccountstask" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LISTACCOUNTSTASK_H&amp;#010;#define LISTACCOUNTSTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;listtask.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5489" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ListAccountsTask&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ListAccountsTask ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LISTACCOUNTSTASK_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			listaccountstask.h - Copyright jpbarrette&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Tue Sep 13 2005 at 16:54:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5559" field_type="7536745" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" ListTask ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5559" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5559" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5559" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5559" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="5559" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="5559" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
