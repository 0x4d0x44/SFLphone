
/*
 *	This file was automatically generated by dbusxx-xml2cpp; DO NOT EDIT!
 */

#ifndef __dbusxx__voicemailmanager_glue_h__ADAPTOR_MARSHAL_H
#define __dbusxx__voicemailmanager_glue_h__ADAPTOR_MARSHAL_H

#include <dbus-c++/dbus.h>

namespace org {
namespace sflphone {
namespace SFLphone {

class VoicemailManager
: public ::DBus::InterfaceAdaptor
{
public:

    VoicemailManager()
    : ::DBus::InterfaceAdaptor("org.sflphone.SFLphone.VoicemailManager")
    {
        register_method(VoicemailManager, getListFolders, _getListFolders_stub);
        register_method(VoicemailManager, getFolderCount, _getFolderCount_stub);
        register_method(VoicemailManager, getListMails, _getListMails_stub);
    }

    ::DBus::IntrospectedInterface* const introspect() const 
    {
        static ::DBus::IntrospectedArgument getListFolders_args[] = 
        {
            { "list", "as", false },
            { 0, 0, 0 }
        };
        static ::DBus::IntrospectedArgument getFolderCount_args[] = 
        {
            { "folder", "s", true },
            { "count", "i", false },
            { 0, 0, 0 }
        };
        static ::DBus::IntrospectedArgument getListMails_args[] = 
        {
            { "folder", "s", true },
            { "list", "as", false },
            { 0, 0, 0 }
        };
        static ::DBus::IntrospectedMethod VoicemailManager_methods[] = 
        {
            { "getListFolders", getListFolders_args },
            { "getFolderCount", getFolderCount_args },
            { "getListMails", getListMails_args },
            { 0, 0 }
        };
        static ::DBus::IntrospectedMethod VoicemailManager_signals[] = 
        {
            { 0, 0 }
        };
        static ::DBus::IntrospectedProperty VoicemailManager_properties[] = 
        {
            { 0, 0, 0, 0 }
        };
        static ::DBus::IntrospectedInterface VoicemailManager_interface = 
        {
            "org.sflphone.SFLphone.VoicemailManager",
            VoicemailManager_methods,
            VoicemailManager_signals,
            VoicemailManager_properties
        };
        return &VoicemailManager_interface;
    }

public:

    /* properties exposed by this interface, use
     * property() and property(value) to get and set a particular property
     */

public:

    /* methods exported by this interface,
     * you will have to implement them in your ObjectAdaptor
     */
    virtual std::vector< ::DBus::String > getListFolders(  ) = 0;
    virtual ::DBus::Int32 getFolderCount( const ::DBus::String& folder ) = 0;
    virtual std::vector< ::DBus::String > getListMails( const ::DBus::String& folder ) = 0;

public:

    /* signal emitters for this interface
     */

private:

    /* unmarshalers (to unpack the DBus message before calling the actual interface method)
     */
    ::DBus::Message _getListFolders_stub( const ::DBus::CallMessage& call )
    {
        ::DBus::MessageIter ri = call.reader();

        std::vector< ::DBus::String > argout1 = getListFolders();
        ::DBus::ReturnMessage reply(call);
        ::DBus::MessageIter wi = reply.writer();
        wi << argout1;
        return reply;
    }
    ::DBus::Message _getFolderCount_stub( const ::DBus::CallMessage& call )
    {
        ::DBus::MessageIter ri = call.reader();

        ::DBus::String argin1; ri >> argin1;
        ::DBus::Int32 argout1 = getFolderCount(argin1);
        ::DBus::ReturnMessage reply(call);
        ::DBus::MessageIter wi = reply.writer();
        wi << argout1;
        return reply;
    }
    ::DBus::Message _getListMails_stub( const ::DBus::CallMessage& call )
    {
        ::DBus::MessageIter ri = call.reader();

        ::DBus::String argin1; ri >> argin1;
        std::vector< ::DBus::String > argout1 = getListMails(argin1);
        ::DBus::ReturnMessage reply(call);
        ::DBus::MessageIter wi = reply.writer();
        wi << argout1;
        return reply;
    }
};

} } } 
#endif//__dbusxx__voicemailmanager_glue_h__ADAPTOR_MARSHAL_H
