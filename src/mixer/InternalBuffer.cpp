/* Generated by Together */

#include "InternalBuffer.h"
#include <string.h>
#include <stdlib.h>

bool InternalBuffer::putData(void * data, int size)
{
  if (data!=NULL && size>0)
  {
    sem_wait(&semaphore);
    buffer = (void*) malloc(size);
    memcpy(data,buffer,size);
    sizeBuffer=size;
    sem_post(&semaphore);
    return true;
  }
    return false;
}

bool InternalBuffer::fetchData(void * data)
{
  if (buffer!=NULL && data!=NULL)
  {
    sem_wait(&semaphore);
    memcpy(buffer,data,sizeBuffer);
    sem_post(&semaphore);
    return true;
  }
  else
    return false;
}

int InternalBuffer::getSizeBuffer()
{
  int leSize;
  sem_wait(&semaphore);
  leSize = sizeBuffer;
  sem_post(&semaphore);
  return leSize;
}

InternalBuffer::InternalBuffer()
{
  sem_init(&semaphore,0,1);
  buffer=NULL;
  sizeBuffer=0;
}

InternalBuffer::~InternalBuffer()
{
  if (buffer!=NULL)
    free(buffer);
  sem_destroy(&semaphore);
}

void InternalBuffer::Init()
{
  //TODO: humm...
}
