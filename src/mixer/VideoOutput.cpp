/* Generated by Together */

#include "VideoOutput.h"
#include "../tracePrintSFL.h"


int VideoOutput::fetchData(char* data)
{
  if (buffer!=NULL && data!=NULL)
  {
    ptracesfl("VideoOutput - fetchData(): Demande semaphore",MT_INFO,true);
    sem_wait(&semaphore);
    ptracesfl("VideoOutput - fetchData(): Zone Critique",MT_INFO,true);
    memcpy(buffer,data,sizeBuffer);
    sem_post(&semaphore);
    ptracesfl("VideoOutput - fetchData(): Sortie Zone Critique",MT_INFO,true);
    return 0;
  }
  else
  {
    ptracesfl("VideoOutput - fetchData(): Erreur parametre",MT_ERROR,true);
    return 1;
  }
}

void VideoOutput::putData(char * data, int size)
{ 
  if (data!=NULL && size>0)
  {
    ptracesfl("VideoOutput - putData(): Demande semaphore",MT_INFO,true);
    sem_wait(&semaphore);
    ptracesfl("VideoOutput - putData(): Zone Critique",MT_INFO,true);
    buffer = new char[size]; 
    memcpy(data,buffer,size);
    sizeBuffer=size;
    sem_post(&semaphore);
    ptracesfl("VideoOutput - putData(): Sortie Zone Critique",MT_INFO,true);
  }
  else
    ptracesfl("VideoOutput - putData(): Erreur parametre",MT_ERROR,true);
}

VideoOutput::VideoOutput()
{
  ptracesfl("VideoOutput - VideoOutput(): Creation de l'objet",MT_INFO,true);
  sem_init(&semaphore,0,1);
  buffer=NULL;
  sizeBuffer=0;
}

VideoOutput::~VideoOutput()
{
  ptracesfl("VideoOutput - ~VideoOutput(): Destruction de l'objet",MT_INFO,true);
  if (buffer!=NULL){
    delete []buffer;
    buffer=NULL;
  }
  sem_destroy(&semaphore);
}

// DEPRECIATED !!!!!
int VideoOutput::fetchData(short *data)
{ 
  return 0; 
}
// DEPRECIATED !!!!!
void VideoOutput::putData(short * data, int size)
{ 
  
}

