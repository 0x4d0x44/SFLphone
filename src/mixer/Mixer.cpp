/* Generated by Together */

#include "Mixer.h"

Mixer::Mixer()
{
}

Mixer::Mixer(Tmixer type, vector<InputStreams*> inputs, OutputStream* audioOut, OutputStream* videoOut)
{
}

Mixer::~Mixer()
{
}


void Mixer::init(Tmixer type, vector<InputStreams*> inputs, OutputStream* audioOut, OutputStream* videoOut)
{
}

void Mixer::start()
{
}

bool Mixer::changeCodecConfig(CodecInfo* infos)
{
	return true;
}

bool Mixer::changeOverallSettings(Tmixer type, vector<InputStreams*> inputs, OutputStream* audioOut, OutputStream* videoOut)
{
	return true;
}

void Mixer::terminateThreads()
{
}

void Mixer::createAutoSense(Tmixer type, vector<InputStreams*> inputs, OutputStream* audioOut, OutputStream* videoOut)
{
}

void Mixer::createStraightThrough(Tmixer type, vector<InputStreams*> inputs, OutputStream* audioOut, OutputStream* videoOut)
{
}

void Mixer::createMixer2(Tmixer type, vector<InputStreams*> inputs, OutputStream* audioOut, OutputStream* videoOut)
{
}

void Mixer::createAudio1()
{
}

bool Mixer::addStream(InputStreams* input)
{
	return true;
}

bool Mixer::addStream(VideoInput* input)
{
	return true;
}

bool Mixer::addStream(AudioInput* input)
{
	return true;
}

void Mixer::updateState()
{
}
