/* Generated by Together */

#include "VideoInput.h"
#include "TimeInfo.h"
#include <string.h>
#include "../tracePrintSFL.h"

void VideoInput::putData(char * data, int size, int leTemps)
{ 
  if (data!=NULL && size>0)
  {

    if( buffer != NULL )
    	delete buffer;
    buffer = new char[size];
    
    if( infoTemps != NULL )
    	delete infoTemps;
    infoTemps = new TimeInfo(leTemps);
    
    memcpy(buffer, data,size);
    sizeBuffer=size;
    ptracesfl("VideoInput - putData(): Sending signal new data",MT_INFO, VIDEOINPUT_TRACE);
    sem_post(&semaphore);
  }
  else
    ptracesfl("VideoInput - putData(): Parameter error",MT_ERROR, VIDEOINPUT_TRACE);
}

int VideoInput::fetchData(char* data)
{ 
  if (buffer!=NULL && data!=NULL)
  {
    
    ptracesfl("VideoInput - fetchData(): Watting for data",MT_INFO, VIDEOINPUT_TRACE);
    sem_wait(&semaphore);
    ptracesfl("VideoInput - recieved new data",MT_INFO, VIDEOINPUT_TRACE);
    memcpy(data, buffer,sizeBuffer);
    return this->sizeBuffer;
  }
  else
  {
    if( data == NULL )
  		ptracesfl("VideoInput - fetchData(): bad paramteter",MT_ERROR, VIDEOINPUT_TRACE);
  	else
    	ptracesfl("VideoInput - fetchData(): empty buffer",MT_ERROR, VIDEOINPUT_TRACE);
  }
  
  return -1;
  
}

int VideoInput::getSizeBuffer()
{
 	return this->sizeBuffer;
}

VideoInput::VideoInput()
{
  sem_init(&semaphore,0,0);
  buffer= NULL;
  infoTemps= NULL;
  sizeBuffer=0;
}

VideoInput::~VideoInput()
{
  if (buffer!=NULL){
    delete buffer;
    buffer=NULL;
  }
  if (infoTemps!=NULL){
    delete infoTemps;
    infoTemps=NULL;
  }
  
}

void VideoInput::putTimeInfo(TimeInfo* infos)
{
  ptracesfl("VideoInput - putTimeInfo(): Demande semaphore",MT_INFO,true);
  sem_wait(&semaphore);
  ptracesfl("VideoInput - putTimeInfo(): Zone Critique",MT_INFO,true);
  infoTemps = infos;
  sem_post(&semaphore);
  ptracesfl("VideoInput - putTimeInfo(): Sortie Zone Critique",MT_INFO,true);
}

TimeInfo VideoInput::fetchTimeInfo()
{ 
  TimeInfo* leTemps;
  ptracesfl("VideoInput - fetchTimeInfo(): Demande semaphore",MT_INFO,true);
  sem_wait(&semaphore);
  ptracesfl("VideoInput - fetchTimeInfo(): Zone Critique",MT_INFO,true);
  leTemps = infoTemps;
  sem_post(&semaphore);
  ptracesfl("VideoInput - fetchTimeInfo(): Sortie Zone Critique",MT_INFO,true);
  return (*leTemps);
}
