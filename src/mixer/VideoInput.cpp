/* Generated by Together */

#include "VideoInput.h"
#include "TimeInfo.h"
#include <string.h>
#include "../tracePrintSFL.h"

void VideoInput::putData(char * data, int size, int leTemps)
{ 
  if (data!=NULL && size>0)
  {
    ptracesfl("VideoInput - putData(): Demande semaphore",MT_INFO,true);
    sem_wait(&semaphore);
    ptracesfl("VideoInput - putData(): Zone Critique",MT_INFO,true);
    if( buffer != NULL )
    	delete buffer;
    buffer = new char[size];
    infoTemps = new TimeInfo(leTemps);
    memcpy(buffer, data,size);
    sizeBuffer=size;
    sem_post(&semaphore);
    ptracesfl("VideoInput - putData(): Sortie Zone Critique",MT_INFO,true);
  }
  else
    ptracesfl("VideoInput - putData(): Erreur parametre",MT_ERROR,true);
}

int VideoInput::fetchData(char* data)
{ 
  if (buffer!=NULL && data!=NULL)
  {
    ptracesfl("VideoInput - fetchData(): Demande semaphore",MT_INFO,true);
    sem_wait(&semaphore);
    ptracesfl("VideoInput - fetchData(): Zone Critique",MT_INFO,true);
    memcpy(data, buffer,sizeBuffer);
    sem_post(&semaphore);
    ptracesfl("VideoInput - fetchData(): Sortie Zone Critique",MT_INFO,true);
    return 0;
  }
  else
  {
    ptracesfl("VideoInput - fetchData(): Erreur parametre",MT_ERROR,true);
    return 1;
  }
}

int VideoInput::getSizeBuffer()
{
  int leSize;
  ptracesfl("VideoInput - getSizeBuffer(): Demande semaphore",MT_INFO,true);
  sem_wait(&semaphore);
  ptracesfl("VideoInput - getSizeBuffer(): Zone Critique",MT_INFO,true);
  leSize = sizeBuffer;
  sem_post(&semaphore);
  ptracesfl("VideoInput - getSizeBuffer(): Sortie Zone Critique",MT_INFO,true);
  return leSize;
}

VideoInput::VideoInput()
{
  ptracesfl("VideoInput - VideoInput(): Creation de l'objet",MT_INFO,true);
  sem_init(&semaphore,0,1);
  buffer=NULL;
  infoTemps=NULL;
  sizeBuffer=0;
}

VideoInput::~VideoInput()
{
  ptracesfl("VideoInput - ~VideoInput(): Destruction de l'objet",MT_INFO,true);
  if (buffer!=NULL){
    delete []buffer;
    buffer=NULL;
  }
  if (infoTemps!=NULL){
    delete infoTemps;
    infoTemps=NULL;
  }
  sem_destroy(&semaphore);
}

void VideoInput::putTimeInfo(TimeInfo* infos)
{
  ptracesfl("VideoInput - putTimeInfo(): Demande semaphore",MT_INFO,true);
  sem_wait(&semaphore);
  ptracesfl("VideoInput - putTimeInfo(): Zone Critique",MT_INFO,true);
  infoTemps = infos;
  sem_post(&semaphore);
  ptracesfl("VideoInput - putTimeInfo(): Sortie Zone Critique",MT_INFO,true);
}

TimeInfo VideoInput::fetchTimeInfo()
{ 
  TimeInfo* leTemps;
  ptracesfl("VideoInput - fetchTimeInfo(): Demande semaphore",MT_INFO,true);
  sem_wait(&semaphore);
  ptracesfl("VideoInput - fetchTimeInfo(): Zone Critique",MT_INFO,true);
  leTemps = infoTemps;
  sem_post(&semaphore);
  ptracesfl("VideoInput - fetchTimeInfo(): Sortie Zone Critique",MT_INFO,true);
  return (*leTemps);
}
