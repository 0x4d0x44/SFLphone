/* Generated by Together */

#ifndef AUDIOOUPUT_H
#define AUDIOOUPUT_H

#include "OutputStream.h"

//! Audio Ouput Buffer
/*!
 * This class acts as an Audio output buffer. It implements the OutputStream interface
 */
class AudioOutput : public OutputStream {
public:

	//! Default constructor
	/*!
	 * Initialises the internal buffer
	 */
    AudioOutput();

    //! Destructor
    /*!
     * Cleanly diposes of the buffer
     */
    ~AudioOutput();

    //! Method to get the data contained by the buffer
    /*!
     * \param data a pointer to the where the data will be put
     * \return the size of the buffer
     */
    virtual int fetchData(short *data);

    //! Method to change the data contained in the buffer
    /*!
     * \param data a pointer to the data to copy
     * \param size th size of the buffer
     */ 
    virtual void putData(short * data, int size);

protected:
	
	//! Data Buffer for the audio data
    short* buffer;
    int sizeBuffer;
    sem_t semaphore;
    
private:
	
	//! Method to change the data in the buffer
	/*!
	 * This method is implemented as private and \b should \b not \b be \b used in AudioOutput. This method is inherited from OutputStream. putData(int16 * data, int size) instead. 
	 */
    virtual void putData(char * data, int size) __attribute__ ((deprecated));
    
    //! Method to get the data in the buffer
	/*!
	 * This method is implemented as private and \b should \b not \b be \b used in AudioOutput. This method is inherited from OutputStream. Use fetchData(int16 *data) instead. 
	 */
    virtual int fetchData(char* data) __attribute__ ((deprecated));

};
#endif //AUDIOOUPUT_H
