/* Generated by Together */

#ifndef AUDIOSYNCH_H
#define AUDIOSYNCH_H
#include "SynchManager.h"

//! Synchonization manager that uses Audio data as reference
/*!
 * This class synchronizes a video stream with an audio stream using the timestamp information from the audio streams and creates a bottle neck on the video stream to create a synchonized output. This class also acts as a thread once started.
 */
class AudioSynch : public SynchManager {
public:

	//!Constructor
	/*!
	 * Initializes the synchronaziation process.
	 * 
	 * \param inputStreams a video and audio stream see InputStreams
	 * \param video a buffer to put the synchonized video data
	 * \param audio a buffer to put the synchonized audio data
	 */
    AudioSynch(InputStreams* inputStreams, InternalBuffer* video, InternalBuffer* audio);


    //! Destructor
    /*!
     * Terminates the thread, you can also call the terminate method explicitly
     */
    ~AudioSynch();

    //! Thread main method
	/*!
	 * Actually does the work in the thread. It synchonizes the 2 inputs.
	 */
    virtual void run();
    
private:
	
	//! Default Constructor
	/*!
	 * Implemented as private to prevent a declaration without the proper buffers
	 */
    AudioSynch();
    
};
#endif //AUDIOSYNCH_H
