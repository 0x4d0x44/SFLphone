/* Generated by Together */

#ifndef AUDIOINPUT_H
#define AUDIOINPUT_H

#include <semaphore.h>
#include "TimeInfo.h"

#define int16 short int

//!  Audio input buffer
/*!
  This class is the audio input buffer of a mixer InputStreams
*/

class AudioInput {
public:

	//! Default constructor
	/*!
	 * 	Initialise the buffer
	 */
    AudioInput();

    //! Destructor
    /*
     *	Cleanly disposes of the buffer
     */
    virtual ~AudioInput();

    //! Access the timing information
    /*!
     * This method returns the timestamp for the data contained in the buffer. The data is used by the synchonization manager to mix the streams 
     */
    virtual TimeInfo fetchTimeInfo() const;

    //! Changes the data contained in the buffer
    /*!
     * This method changes the data contained in the buffer. Buffer access is protected to prevent simultanious access.
     * 
     * \param data a pointer to a data buffer
     * \param size the size of the buffer
     */
    virtual void putData(int16 *data, int size);

    //! Access the data contained the the buffer
    /*!
     * This method returns the data. Buffer access is protected to prevent simultanious access.
     * 
     * \param data a pointer to where the data must be copied
     * \return the size of the fetched data 
     */
    virtual int fetchData(int16 *data) const;

    void putTimeInfo(TimeInfo* infos);

private:
	
	//! Simultanious access protection semaphore 
    sem_t semaphore;
    
    //! Internal data buffer

    TimeInfo* infoTemps;
    int16 * buffer;
    
};
#endif //AUDIOINPUT_H
