/* Generated by Together */

#include "NoSynch.h"

NoSynch::NoSynch()
{
}

NoSynch::NoSynch(InputStreams* Streams, InternalBuffer* video, InternalBuffer* audio)
{
  inputStreams = Streams;
  bufferAudio = audio;
  bufferVideo = video;
  
  Active=false;
  OkToKill=false;
}

NoSynch::~NoSynch()
{
}

void NoSynch::run()
{
  OkToKill = false;
  short* dataAudio= NULL;
  unsigned char* dataVideo= NULL;
  
  while(Active)
  {
    // Getting audio data size
    ptracesfl("NoSynch - run(): Getting Audio Data size ... ",MT_INFO, NOSYNCH_TRACE);
    int sizeBufferAudio=inputStreams->fetchAudioStream()->getSizeBuffer();
    
	// Getting and dispatching audio data
	if( sizeBufferAudio != 0 ){
		
		ptracesfl("NoSynch - run(): Getting Audio Data from audio input buffer ... ",MT_INFO, NOSYNCH_TRACE);
		dataAudio = inputStreams->fetchAudioStream()->fetchData(sizeBufferAudio);
		if( sizeBufferAudio != -1 ){
			ptracesfl("NoSynch - run(): Putting Audio Data into audio internall buffer ... ",MT_INFO, NOSYNCH_TRACE);
			bufferAudio->putData((void*)dataAudio,sizeBufferAudio);
		}else
			ptracesfl("NoSynch - run(): Cannot transfert audio data from sync manager to internal audio buffer",MT_ERROR, NOSYNCH_TRACE);
				
		dataAudio= NULL;
		
	}else
		ptracesfl("NoSynch - run(): Not Audio input data to fetch",MT_WARNING, NOSYNCH_TRACE);
	
	// Getting video data size
	ptracesfl("NoSynch - run(): Getting Video Data size ... ",MT_INFO, NOSYNCH_TRACE);
	int sizeBufferVideo=inputStreams->fetchVideoStream()->getSizeBuffer();
	
	if( sizeBufferVideo != 0 ){
							
		ptracesfl("NoSynch - run(): Getting Video Data from video input buffer ... ",MT_INFO, NOSYNCH_TRACE);
		dataVideo= inputStreams->fetchVideoStream()->fetchData( sizeBufferVideo );
		if( sizeBufferVideo != -1){
			bufferVideo->putData((void*)dataVideo,sizeBufferVideo);
		}else
			ptracesfl("NoSynch - run(): Cannot transfert Video data from sync manager to internal video buffer",MT_ERROR, NOSYNCH_TRACE);
			
		dataVideo= NULL;
		
	}
		ptracesfl("NoSynch - run(): Not Video input data to fetch",MT_WARNING, NOSYNCH_TRACE);
	    
	usleep(50);
    
  }
  
  ptracesfl("NoSynch - stop(): Thread now stopped",MT_INFO,NOSYNCH_TRACE);
  
  OkToKill=true;
}

void NoSynch::stop()
{
  ptracesfl("NoSynch - stop(): Stopping the thread",MT_INFO,NOSYNCH_TRACE);
  
  Active=false;
   
  // Waiting for the thread to stop  
  //TODO: check why segfault when uncommenting the following line
  //while(!OkToKill);
  
}
