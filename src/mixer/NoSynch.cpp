/* Generated by Together */

#include "NoSynch.h"
#include "../tracePrintSFL.h"


void NoSynch::run()
{
  OkToKill = false;
  while(Active)
  {
    // Getting audio data size
    sizeBufferAudio=inputStreams->fetchAudioStream()->getSizeBuffer();
    
	// Getting and dispatching audio data
	dataAudio = new short[sizeBufferAudio];
	if( sizeBufferAudio != 0 && audioInput->fetchData(dataAudio) != -1 ){
		bufferAudio->putData((void*)dataAudio,sizeBufferAudio);
	}
	
	delete dataAudio;
	dataAudio= NULL;
	
	// Getting video data size
	sizeBufferVideo=inputStreams->fetchVideoStream()->getSizeBuffer();
	
	// Getting and dispatching video data
	int w= 0, h= 0;
	dataVideo = new unsigned char[sizeBufferVideo];	
	if( sizeBufferVideo != 0 && videoInput->fetchData(dataVideo, w, h) != -1){
		bufferVideo->putData((void*)dataVideo,sizeBufferVideo);
	}
	
	delete dataVideo;
	dataVideo= NULL;
	    
	usleep(10);
    
  }
  ptracesfl("NoSynch - run(): Le thread travail plus :(",MT_INFO,true);
  OkToKill=true;
}

void NoSynch::stop()
{
  ptracesfl("NoSynch - stop(): Demande d'arret recu...",MT_INFO,true);
  Active=false;
  while(!OkToKill);
  ptracesfl("NoSynch - stop(): Killing Thread now!",MT_INFO,true);
}

NoSynch::~NoSynch()
{
  ptracesfl("NoSynch - ~NoSynch(): Destruction de l'objet",MT_INFO,true);
  if (dataAudio!=NULL)
    delete dataAudio;
  if (dataVideo!=NULL)
    delete dataVideo;
}

NoSynch::NoSynch(InputStreams* Streams, InternalBuffer* video, InternalBuffer* audio)
{
  ptracesfl("NoSynch - NoSynch(): Creation de l'objet",MT_INFO,true);
  inputStreams = Streams;
  bufferAudio = audio;
  bufferVideo = video;
  Active=true;
  OkToKill=true;
}

NoSynch::NoSynch()
{
  // Deprecated
}
