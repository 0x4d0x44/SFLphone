/* Generated by Together */

#ifndef VIDEOOUTPUT_H
#define VIDEOOUTPUT_H
#include "OutputStream.h"

//! Video Ouput Buffer
/*!
 * This class acts as an Video output buffer. It implements the OutputStream interface
 */
class VideoOutput : public OutputStream {
public:

	//! Default constructor
	/*!
	 * Initialises the internal buffer
	 */
    VideoOutput();

    //! Destructor
    /*!
     * Cleanly diposes of the buffer
     */
    ~VideoOutput();

    //! Method to get the data contained by the buffer
    /*!
     * \param data a pointer to the where the data will be put
     * \return the size of the buffer
     */
    virtual int fetchData(char* data);

    //! Method to change the data contained in the buffer
    /*!
     * \param data a pointer to the data to copy
     * \param size th size of the buffer
     */ 
    virtual void putData(char * data, int size);


protected:
	
	//! Data Buffer for the video data
    char * buffer;
    int sizeBuffer;
    
private:
	
	//! Method to change the data in the buffer
	/*!
	 * This method is implemented as private and \b should \b not \b be \b used in VideoOutput. This method is inherited from OutputStream. putData(char * data, int size) instead. 
	 */
    virtual void putData(int16 * data, int size) __attribute__ ((deprecated));
    
    //! Method to get the data in the buffer
	/*!
	 * This method is implemented as private and \b should \b not \b be \b used in VideoOutput. This method is inherited from OutputStream. Use fetchData(char* data) instead. 
	 */
    virtual int fetchData(int16 *data) __attribute__ ((deprecated));

};
#endif //VIDEOOUTPUT_H
