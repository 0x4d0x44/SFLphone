/* Generated by Together */

#include "StraightThrough_VT.h"
#include "InternalBuffer.h"
#include "OutputStream.h"
#include "../tracePrintSFL.h"

void StraightThrough_VT::run()
{ 
  OkToKill=false;
  while(Active)
  { 
    sizeBuffer = inputBuffer->getSizeBuffer();
    if( sizeBuffer != 0 ){
	    data = (void*) malloc(sizeBuffer);
	    inputBuffer->fetchData(data);
	    outputBuffer->putData((char*)data,sizeBuffer);
	    free(data);
    }
    usleep(10);
  }
  ptracesfl("StraightThrough_VT - run(): Le thread travail plus :(",MT_INFO,true);
  OkToKill=true;
}

void StraightThrough_VT::pause()
{ 
  ptracesfl("StraightThrough_VT - pause(): Demande de pause recu...",MT_INFO,true);
  Active=false;
}

void StraightThrough_VT::restart()
{
  ptracesfl("StraightThrough_VT - restart(): Demande de restart recu...",MT_INFO,true);
  Active=true;
  run();
}

void StraightThrough_VT::stop()
{ 
  ptracesfl("StraightThrough_VT - stop(): Demande de stop recu...",MT_INFO,true);
  Active=false;
  while(!OkToKill);
}

StraightThrough_VT::StraightThrough_VT(InternalBuffer* video,  OutputStream* output, CodecInfo* infos)
{
  ptracesfl("StraightThrough_VT - StraightThrough_VT(): Creation de l'objet",MT_INFO,true);
  inputBuffer = video;
  outputBuffer = output;
  infoCodecs = infos;
  Active=true;
  OkToKill=true;
}

StraightThrough_VT::~StraightThrough_VT()
{
  ptracesfl("StraightThrough_VT - ~StraightThrough_VT(): Destruction de l'objet",MT_INFO,true);
  free(data);
}

//DEPRECATED!!!
StraightThrough_VT::StraightThrough_VT()
{
}

