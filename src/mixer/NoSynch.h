/* Generated by Together */

#ifndef NOSYNCH_H
#define NOSYNCH_H
#include "SynchManager.h"

//! Synchonization manager that does not synchronizes
/*!
 * Used when no synchronization is nedded. (ie: 1 input only)
 */
class NoSynch : public SynchManager {
public:

	//! Constructor
	/*!
	 * Initialises the Synchronization Manager.
	 */
    NoSynch(InputStreams* Streams, InternalBuffer* video, InternalBuffer* audio);

    //! Destructor
    /*!
     * Terminates the thread, you can also call the terminate method explicitly
     */
    virtual ~NoSynch();

    //! Thread main method
	/*!
	 * Actually does the work in the thread.
	 */
    virtual void run();

    //! Stop and Kill the thread
    virtual void stop();
    
private:
	
	//! Default Constructor
		/*!
		 * Implemented as private to prevent a declaration without the proper buffers
		 */
    NoSynch();
    
    //Declaration des Inputsteams
    InputStreams* inputStreams;
    AudioInput* audioInput;
    VideoInput* videoInput;

    // Declaration des conteneurs de datas
    int16* dataAudio;
    char* dataVideo;

    // Grandeur des buffers de data
    int sizeBufferAudio;
    int sizeBufferVideo;

    //Declaration des buffer Internes
    InternalBuffer* bufferVideo;
    InternalBuffer* bufferAudio;

    // Variable de controle
    bool Active;
    bool OkToKill;

};
#endif //NOSYNCH_H
