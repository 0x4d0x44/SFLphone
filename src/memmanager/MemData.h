/* Generated by Together */

#ifndef MEMDATA_H
#define MEMDATA_H

//! Memmory data container
/*!
 * Contains a copy of the data in the shared memory. It contains the data it self and the size. This class acts like a container.
 */
class MemData {
public:

	//! Constructor
	/*!
	 * Initialises the Container
	 */
    MemData();

    //! Pointer copy constructor
    /*!
     * Creates an independant copy of the source object
     * 
     * \param data a pointer to a MemData object
     */
    MemData(MemData* data);

    //! Reference copy constructor
    /*!
     * Creates an independant copy of the source object
     * 
     * \param data a reference to a MemData object
     */
    MemData(MemData& data);

    //! Destructor
    /*!
     * Disposes cleanly of the data pointer
     */
    ~MemData();

    //! Method to access the data in the buffer
    /*!
     * \param data a pointer to where the data wil be copied
     * \return the size of data
     */
    int fetchData(char * data);

    //! Method to change the data in the buffer
    /*!
     * \param data a pointer to the new data
     * \param size the size of data
     */
    void putData(char * data, int size);
        
private:
	
	 //! Pointer to the data
    char * data;
    
    //! The current size of the data in the buffer
    int size;
};
#endif //MEMDATA_H
