/* Generated by Together */

#include "MemManager.h"

MemManager* MemManager::instance= 0;

MemManager* MemManager::getInstance()
{
	return 0;
}

MemManager::MemManager()
{
}

MemManager::~MemManager()
{
}

const MemKey* MemManager::initSpace(int key, int size)
{
	return 0;
}

const MemKey* MemManager::initSpace(MemKey* key, int size)
{
	return 0;
}

bool MemManager::setDefaultSpace(MemKey* key)
{
	return false;
}

void MemManager::nextSpace()
{
}

void MemManager::previousSpace()
{
}

MemData* MemManager::fetchData( )
{
}

MemData* MemManager::fetchData(int key)
{
}

MemData* MemManager::fetchData(MemKey* key)
{
}

bool MemManager::putData(void * Data, int size)
{
	return false;
}

bool MemManager::putData(int key, void * Data, int size)
{
	return false;
}

bool MemManager::putData(MemKey* key, void * Data, int size)
{
	return false;
}

vector<MemKey*> MemManager::getAvailSpaces() const 
{
	vector<MemKey*> tmp;
	return tmp;
}

const MemKey* MemManager::initSpace(int size)
{
	return 0;
}

int MemManager::genKey()
{
}
