/* Generated by Together */

#include "Contrast.h"

  Contrast::Contrast(){}

  Contrast::~Contrast(){}

  bool Contrast::increase(__u16 value){
  	
  	__u16 currentValue = this->videoDevice->getVideoPicture()->contrast;
    
    if( (currentValue+value) > 65535 ){ // if the contrast value is already at its maximum
      return false; // indicate that the value is already at its maximum
    }
    else{
      this->videoDevice->setContrast(currentValue+value);
      // ioctl call in VideoDevice to apply changes
      return this->videoDevice->applyChanges('p'); // indicate that the value has been increased and if ioctl has been correctly done (return true or false) 
    }
    
  }

  bool Contrast::decrease(__u16 value){
    
    __u16 currentValue = this->videoDevice->getVideoPicture()->contrast;
    
    if( (currentValue-value) < 0 ){ // if the contrast value is already at its maximum
      return false; // indicate that the value is already at its maximum
    }
    else{
      this->videoDevice->setContrast(currentValue-value);
      // ioctl call in VideoDevice to apply changes
      return this->videoDevice->applyChanges('p'); // indicate that the value has been decreased and if ioctl has been correctly done (return true or false)
    }    
    
  }

  bool Contrast::setTo(__u16 value){
    this->videoDevice->setContrast(value);
    // ioctl call in VideoDevice to apply changes
    return this->videoDevice->applyChanges('p'); // indicate that the value has been seted and if ioctl has been correctly done (return true or false)
  }

  bool Contrast::reset(){
    //\ TODO
    return true;
  }
  
  char* Contrast::getContrast(){
    //\ TODO
    return 0;
  }
