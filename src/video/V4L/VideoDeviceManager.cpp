/* Generated by Together */

#include "VideoDeviceManager.h"
#include "VideoDevice.h"

  VideoDeviceManager* VideoDeviceManager::instance = 0;

  VideoDeviceManager* VideoDeviceManager::getInstance(){

	if( VideoDeviceManager::instance == 0 )
		VideoDeviceManager::instance= new VideoDeviceManager();
		
    return instance; 
  }

  VideoDeviceManager::VideoDeviceManager(){

  	this->actualVideoDevice= NULL;

  }

  VideoDeviceManager::~VideoDeviceManager(){

  	if( this->actualVideoDevice != NULL )
  		delete this->actualVideoDevice;

  }


  bool VideoDeviceManager::changeDevice(char* srcName){

	// \ TODO: Implement

    return true;
  }

  bool VideoDeviceManager::createDevice(char* srcName){
    
    try{
    	this->actualVideoDevice= new VideoDevice( srcName );
    }catch(...){
    	return false;
    }
    
    Command::videoDevice= actualVideoDevice;
    
    return true;

  }

  Command* VideoDeviceManager::getCommand(TCommand ref){
    
    Command* tmp= NULL;
    
    switch(ref){
    	case CONTRAST:
    		tmp= new Contrast();
    		break;
    	case BRIGHTNESS:
    		tmp= new Brightness();
    		break;
		case COLOR:
			tmp = new Colour();
			break;
		case CAPTURE:
			tmp= new Capture();
			break;
		case RESOLUTION:
			tmp= new Resolution();
			break;	
    }
    
    return tmp;
    
  }



