/* Generated by Together */

#ifndef COMMAND_H
#define COMMAND_H
#include "VideoDevice.h"


//! Command
/*!
 * This abstract class acts as an interface for multiple types of commands (to set and get proprieties of the video device)
 */ 
class Command {
public:

    //! Constructor
    Command();


    //! Destructor
    ~Command();


    //! Method to increase the value of the propriety
    /*!
     * Must be implemented by the child class
     * \return a bool representing the success of the operation
     */
    virtual bool increase(__u16 value) =0;


    //! Method to decrease the value of the propriety
    /*!
     * Must be implemented by the child class
     * \return a bool representing the success of the operation
     */
    virtual bool decrease(__u16 value) =0;


    //! Method to set the propriety to an exact value
    /*!
     * Must be implemented by the child class
     * \return a bool representing the success of the operation
     */
    virtual bool setTo(__u16 value) =0;

    
    //! Method to reset the propriety to its initial value
    /*!
     * Must be implemented by the child class
     * \return a bool representing the success of the operation
     */
    virtual bool reset() =0;


protected:

    /**
     * @clientCardinality 0..*
     * @supplierCardinality 1 
     */
    
    //! A static pointer to access to the actual VideoDevice
    static VideoDevice* videoDevice;
};
#endif //COMMAND_H

