<?xml version="1.0" ?>
<node name="/org/sflphone/SFLphone">
  <interface name="org.sflphone.SFLphone.VideoManager">
      
		<method name="enumerateDevices" tp:name-for-bindings="enumerateDevices">
			<tp:added version="0.9.9"/>
			<tp:docstring>
			Retreive a printable list of all the video capture devices that are available.
			</tp:docstring>
			
			<arg type="as" name="list" direction="out">
			  <tp:docstring>
			    The list of all the video capture devices that are available.
			  </tp:docstring>
			</arg>
		</method>
		
		<method name="startLocalCapture" tp:name-for-bindings="startLocalCapture">
			<tp:added version="0.9.9"/>
			<tp:docstring>
			Start capturing frames from a specified video device and write to shared memory.
			</tp:docstring>
			
			<arg type="s" name="device" direction="in">
			  <tp:docstring>
			   The video device to start capturing from.
			  </tp:docstring>
			</arg>
			
			<arg type="s" name="path" direction="out">
			  <tp:docstring>
			  A path to the shared memory segment.
			  </tp:docstring>
			</arg>
		</method>  
		
		<method name="getEventFdPasserNamespace" tp:name-for-bindings="getEventFdPasserNamespace">
			<tp:added version="0.9.9"/>
			<tp:docstring>
			Retreive the namespace of a running instance of a file descriptor passer in the UNIX domain. This so-called file descriptor passer
			is only used for passing the fd corresponding to an eventfd() source. It would be possible with DBUS alone, but only 
			starting from 1.3.
			</tp:docstring>
			
			<arg type="s" name="device" direction="in">
			  <tp:docstring>
			   The device of interest for event notifications (frame capture).
			  </tp:docstring>
			</arg>
			
			<arg type="s" name="path" direction="out">
			  <tp:docstring>
			  The namespace of a running instance of a file descriptor passer for the corresponding device.
			  </tp:docstring>
			</arg>
		</method>   
				  
  </interface>
</node>
