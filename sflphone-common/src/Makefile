# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/SFLphone
pkglibdir = $(libdir)/SFLphone
pkgincludedir = $(includedir)/SFLphone
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/../globals.mak \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
bin_PROGRAMS = sflphoned$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libsflphone_la_DEPENDENCIES = $(src)/libs/stund/libstun.la \
	$(src)/libs/utilspp/libutilspp.la $(src)/libs/iax2/libiax2.la \
	./audio/libaudio.la ./dbus/libdbus.la ./config/libconfig.la \
	./plug-in/libplugin.la \
	./plug-in/audiorecorder/libaudiorecorder.la \
	./hooks/libhooks.la
am_libsflphone_la_OBJECTS =
libsflphone_la_OBJECTS = $(am_libsflphone_la_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__sflphoned_SOURCES_DIST = voiplink.cpp main.cpp managerimpl.cpp \
	observer.cpp samplerateconverter.cpp eventthread.cpp \
	sipaccount.cpp accountcreator.cpp sipvoiplink.cpp call.cpp \
	account.cpp sipcall.cpp sdp.cpp sdpmedia.cpp numbercleaner.cpp \
	iaxaccount.cpp iaxvoiplink.cpp iaxcall.cpp
am__objects_1 = sflphoned-iaxaccount.$(OBJEXT) \
	sflphoned-iaxvoiplink.$(OBJEXT) \
	sflphoned-iaxcall.$(OBJEXT)
am_sflphoned_OBJECTS = sflphoned-voiplink.$(OBJEXT) \
	sflphoned-main.$(OBJEXT) sflphoned-managerimpl.$(OBJEXT) \
	sflphoned-observer.$(OBJEXT) \
	sflphoned-samplerateconverter.$(OBJEXT) \
	sflphoned-eventthread.$(OBJEXT) sflphoned-sipaccount.$(OBJEXT) \
	sflphoned-accountcreator.$(OBJEXT) \
	sflphoned-sipvoiplink.$(OBJEXT) sflphoned-call.$(OBJEXT) \
	sflphoned-account.$(OBJEXT) sflphoned-sipcall.$(OBJEXT) \
	sflphoned-sdp.$(OBJEXT) sflphoned-sdpmedia.$(OBJEXT) \
	sflphoned-numbercleaner.$(OBJEXT) $(am__objects_1)
sflphoned_OBJECTS = $(am_sflphoned_OBJECTS)
am__DEPENDENCIES_1 =
sflphoned_DEPENDENCIES = ./libsflphone.la $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libsflphone_la_SOURCES) $(sflphoned_SOURCES)
DIST_SOURCES = $(libsflphone_la_SOURCES) $(am__sflphoned_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home-local/manu/devel/sflphone/git/sflphone/sflphone-common/missing --run aclocal-1.9
ALLOCA = 
ALSA_CFLAGS = -I/usr/include/alsa  
ALSA_LIBS = -lasound  
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home-local/manu/devel/sflphone/git/sflphone/sflphone-common/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home-local/manu/devel/sflphone/git/sflphone/sflphone-common/missing --run autoconf
AUTOHEADER = ${SHELL} /home-local/manu/devel/sflphone/git/sflphone/sflphone-common/missing --run autoheader
AUTOMAKE = ${SHELL} /home-local/manu/devel/sflphone/git/sflphone/sflphone-common/missing --run automake-1.9
AWK = gawk
BUILD_GSM_FALSE = #
BUILD_GSM_TRUE = 
BUILD_ILBC_FALSE = 
BUILD_ILBC_TRUE = #
BUILD_LIBDBUS_CXX_DIR = $(top_builddir)
BUILD_SPEEX_FALSE = #
BUILD_SPEEX_TRUE = 
CC = gcc
CCDEPMODE = depmode=gcc3
CCEXT2_CFLAGS = -D_GNU_SOURCE  
CCEXT2_LIBS = -pthread -lccext2 -lz -lccgnu2 -ldl -lrt  
CCGNU2_CFLAGS = -D_GNU_SOURCE  
CCGNU2_FLAGS = 
CCGNU2_LIBS = -pthread -lccgnu2 -ldl -lrt  
CCRTP_CFLAGS = -D_GNU_SOURCE  
CCRTP_LIBS = -pthread -lccrtp1 -lccgnu2 -ldl -lrt  
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CPPUNIT_CFLAGS =  
CPPUNIT_LIBS = -lcppunit  
CROSS_COMPILING_FALSE = 
CROSS_COMPILING_TRUE = #
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2   -O0 -g -Wno-return-type
CYGPATH_W = echo
DBUS_SERVICES_DIR = ${datarootdir}/dbus-1/services
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOC_FALSE = #
DOC_TRUE = 
DOT = /usr/bin/dot
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_DOXYGEN_FALSE = 
ENABLE_DOXYGEN_TRUE = #
ENABLE_GLIB_FALSE = 
ENABLE_GLIB_TRUE = #
ENABLE_SPEEXDSP_FALSE = #
ENABLE_SPEEXDSP_TRUE = 
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_GTKMM_FALSE = 
HAVE_GTKMM_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = -lspeexdsp -lspeex -lgsm  -lstdc++
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home-local/manu/devel/sflphone/git/sflphone/sflphone-common/missing --run makeinfo
NM = /usr/bin/nm -B
NMEDIT = 
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = SFLphone
PACKAGE_BUGREPORT = sflphoneteam@savoirfairelinux.com
PACKAGE_NAME = SFLphone
PACKAGE_STRING = SFLphone 0.9.5~beta
PACKAGE_TARNAME = sflphone
PACKAGE_VERSION = 0.9.5~beta
PATH_SEPARATOR = :
PKGADD_NAME = SFLphone - a SIP client and daemon
PKGADD_PKG = SFLphone
PKGADD_VENDOR = http://www.sflphone.org/
PKG_CONFIG = /usr/bin/pkg-config
PULSEAUDIO_CFLAGS = -D_REENTRANT  
PULSEAUDIO_LIBS = -lpulse  
RANLIB = ranlib
SAMPLERATE_CFLAGS =  
SAMPLERATE_LIBS = -lsamplerate  
SED = /bin/sed
SET_MAKE = 
SFLPHONE_CFLAGS = 
SFLPHONE_LIBS = 
SHELL = /bin/bash
SIP_CFLAGS = -I/usr/local/include  
SIP_LIBS = -L/usr/local/lib -lpjsua-sfl -lpjsip-sfl -lpjmedia-sfl -lpjsip-simple-sfl -lpjsip-ua-sfl -lpjmedia-codec-sfl -lpjlib-util-sfl -lpj-sfl  
STRIP = strip
USE_IAX_FALSE = #
USE_IAX_TRUE = 
UUID_CFLAGS = -I/usr/include/uuid  
UUID_LIBS = -luuid  
VERSION = 0.9.5~beta
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
dbus_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include  
dbus_LIBS = -L//lib -ldbus-1  
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_dot = yes
enable_html_docs = yes
enable_latex_docs = no
exec_prefix = ${prefix}
glib_CFLAGS = 
glib_LIBS = 
gtkmm_CFLAGS = 
gtkmm_LIBS = 
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home-local/manu/devel/sflphone/git/sflphone/sflphone-common/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sflphone_datadir = ${datarootdir}/sflphone
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
xml_CFLAGS = 
xml_LIBS = -lexpat

# Global variables
src = $(top_srcdir)
sflcodecdir = $(libdir)/sflphone/codecs
sflplugindir = $(libdir)/sflphone/plugins
PJSIP_LIBS = -lpjnath-sfl -lpjsua-sfl -lpjsip-sfl -lpjmedia-sfl -lpjsip-simple-sfl -lpjsip-ua-sfl -lpjmedia-codec-sfl -lpjlib-util-sfl -lpj-sfl 
DBUSCPP_CFLAGS = $(top_srcdir)/libs/dbus-c++/include/dbus-c++
#SPEEXCODEC = 
SPEEXCODEC = -DHAVE_SPEEX_CODEC
#GSMCODEC = 
GSMCODEC = -DHAVE_GSM_CODEC

# Preprocessor flags
AM_CPPFLAGS = \
	-I$(src)/libs \
	-I$(src)/libs/dbus-c++/include \
	-I$(src)/libs/iax2 \
	-I$(src)/src \
	-I$(src)/test \
	-DPREFIX=\"$(prefix)\" \
	-DPROGSHAREDIR=\"${datadir}/sflphone\" \
	$(ZEROCONFFLAGS) \
	$(IAX_FLAGS) \
	-I/usr/local/include   \
	$(DBUSCPP_CFLAGS) \
	-DCODECS_DIR=\""$(sflcodecdir)"\" \
	-DPLUGINS_DIR=\""$(sflplugindir)"\" \
	-DENABLE_TRACE \
	-DSFLDEBUG \
         $(SPEEXCODEC) \
         $(GSMCODEC)

#IAX_FLAGS = 

# Use the global instead of locally built
IAX_FLAGS = -DUSE_IAX
#IAXSOURCES = 
IAXSOURCES = iaxaccount.cpp iaxvoiplink.cpp iaxcall.cpp
#IAXHEADERS = 
IAXHEADERS = iaxaccount.h iaxvoiplink.h iaxcall.h
SUBDIRS = dbus audio config plug-in hooks

# Add here the cpp files to be build with sflphone
sflphoned_SOURCES = \
		voiplink.cpp \
		main.cpp \
		managerimpl.cpp \
		observer.cpp \
		samplerateconverter.cpp \
		eventthread.cpp \
		sipaccount.cpp \
		accountcreator.cpp \
        sipvoiplink.cpp \
		call.cpp \
		account.cpp \
		sipcall.cpp \
		sdp.cpp \
		sdpmedia.cpp \
		numbercleaner.cpp \
		$(IAXSOURCES) 

sflphoned_CXXFLAGS = \
		-DPREFIX=\"$(prefix)\" -DPROGSHAREDIR=\"${datadir}/sflphone\" \
		$(IAX_FLAGS)


# Add here the dynamic libraries sflphoned should be linked against
sflphoned_LDADD = \
		./libsflphone.la \
		-pthread -lccgnu2 -ldl -lrt   \
		-pthread -lccext2 -lz -lccgnu2 -ldl -lrt   \
		$(PJSIP_LIBS) \
		-pthread -lccrtp1 -lccgnu2 -ldl -lrt   \
		-lasound   \
		-lpulse   \
		-lsamplerate   


# sflphoned_LDFLAGS= -pg -luuid
sflphoned_LDFLAGS = -luuid
noinst_LTLIBRARIES = libsflphone.la
noinst_HEADERS = \
        voiplink.h \
		managerimpl.h \
		manager.h \
		global.h \
		observer.h \
		eventthread.h \
		user_cfg.h \
		samplerateconverter.h \
		account.h \
		sipaccount.h \
		accountcreator.h \
        sipvoiplink.h \
		call.h \
		sipcall.h \
		sdp.h \
		sdpmedia.h \
		numbercleaner.h

libsflphone_la_LIBADD = \
	$(src)/libs/stund/libstun.la \
	$(src)/libs/utilspp/libutilspp.la \
	$(src)/libs/iax2/libiax2.la \
	./audio/libaudio.la \
	./dbus/libdbus.la \
	./config/libconfig.la \
	./plug-in/libplugin.la \
	./plug-in/audiorecorder/libaudiorecorder.la \
	./hooks/libhooks.la 

libsflphone_la_SOURCES = 
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../globals.mak $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libsflphone.la: $(libsflphone_la_OBJECTS) $(libsflphone_la_DEPENDENCIES) 
	$(LINK)  $(libsflphone_la_LDFLAGS) $(libsflphone_la_OBJECTS) $(libsflphone_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
sflphoned$(EXEEXT): $(sflphoned_OBJECTS) $(sflphoned_DEPENDENCIES) 
	@rm -f sflphoned$(EXEEXT)
	$(CXXLINK) $(sflphoned_LDFLAGS) $(sflphoned_OBJECTS) $(sflphoned_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/sflphoned-account.Po
include ./$(DEPDIR)/sflphoned-accountcreator.Po
include ./$(DEPDIR)/sflphoned-call.Po
include ./$(DEPDIR)/sflphoned-eventthread.Po
include ./$(DEPDIR)/sflphoned-iaxaccount.Po
include ./$(DEPDIR)/sflphoned-iaxcall.Po
include ./$(DEPDIR)/sflphoned-iaxvoiplink.Po
include ./$(DEPDIR)/sflphoned-main.Po
include ./$(DEPDIR)/sflphoned-managerimpl.Po
include ./$(DEPDIR)/sflphoned-numbercleaner.Po
include ./$(DEPDIR)/sflphoned-observer.Po
include ./$(DEPDIR)/sflphoned-samplerateconverter.Po
include ./$(DEPDIR)/sflphoned-sdp.Po
include ./$(DEPDIR)/sflphoned-sdpmedia.Po
include ./$(DEPDIR)/sflphoned-sipaccount.Po
include ./$(DEPDIR)/sflphoned-sipcall.Po
include ./$(DEPDIR)/sflphoned-sipvoiplink.Po
include ./$(DEPDIR)/sflphoned-voiplink.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

sflphoned-voiplink.o: voiplink.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-voiplink.o -MD -MP -MF "$(DEPDIR)/sflphoned-voiplink.Tpo" -c -o sflphoned-voiplink.o `test -f 'voiplink.cpp' || echo '$(srcdir)/'`voiplink.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-voiplink.Tpo" "$(DEPDIR)/sflphoned-voiplink.Po"; else rm -f "$(DEPDIR)/sflphoned-voiplink.Tpo"; exit 1; fi
#	source='voiplink.cpp' object='sflphoned-voiplink.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-voiplink.o `test -f 'voiplink.cpp' || echo '$(srcdir)/'`voiplink.cpp

sflphoned-voiplink.obj: voiplink.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-voiplink.obj -MD -MP -MF "$(DEPDIR)/sflphoned-voiplink.Tpo" -c -o sflphoned-voiplink.obj `if test -f 'voiplink.cpp'; then $(CYGPATH_W) 'voiplink.cpp'; else $(CYGPATH_W) '$(srcdir)/voiplink.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-voiplink.Tpo" "$(DEPDIR)/sflphoned-voiplink.Po"; else rm -f "$(DEPDIR)/sflphoned-voiplink.Tpo"; exit 1; fi
#	source='voiplink.cpp' object='sflphoned-voiplink.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-voiplink.obj `if test -f 'voiplink.cpp'; then $(CYGPATH_W) 'voiplink.cpp'; else $(CYGPATH_W) '$(srcdir)/voiplink.cpp'; fi`

sflphoned-main.o: main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-main.o -MD -MP -MF "$(DEPDIR)/sflphoned-main.Tpo" -c -o sflphoned-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-main.Tpo" "$(DEPDIR)/sflphoned-main.Po"; else rm -f "$(DEPDIR)/sflphoned-main.Tpo"; exit 1; fi
#	source='main.cpp' object='sflphoned-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

sflphoned-main.obj: main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-main.obj -MD -MP -MF "$(DEPDIR)/sflphoned-main.Tpo" -c -o sflphoned-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-main.Tpo" "$(DEPDIR)/sflphoned-main.Po"; else rm -f "$(DEPDIR)/sflphoned-main.Tpo"; exit 1; fi
#	source='main.cpp' object='sflphoned-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

sflphoned-managerimpl.o: managerimpl.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-managerimpl.o -MD -MP -MF "$(DEPDIR)/sflphoned-managerimpl.Tpo" -c -o sflphoned-managerimpl.o `test -f 'managerimpl.cpp' || echo '$(srcdir)/'`managerimpl.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-managerimpl.Tpo" "$(DEPDIR)/sflphoned-managerimpl.Po"; else rm -f "$(DEPDIR)/sflphoned-managerimpl.Tpo"; exit 1; fi
#	source='managerimpl.cpp' object='sflphoned-managerimpl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-managerimpl.o `test -f 'managerimpl.cpp' || echo '$(srcdir)/'`managerimpl.cpp

sflphoned-managerimpl.obj: managerimpl.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-managerimpl.obj -MD -MP -MF "$(DEPDIR)/sflphoned-managerimpl.Tpo" -c -o sflphoned-managerimpl.obj `if test -f 'managerimpl.cpp'; then $(CYGPATH_W) 'managerimpl.cpp'; else $(CYGPATH_W) '$(srcdir)/managerimpl.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-managerimpl.Tpo" "$(DEPDIR)/sflphoned-managerimpl.Po"; else rm -f "$(DEPDIR)/sflphoned-managerimpl.Tpo"; exit 1; fi
#	source='managerimpl.cpp' object='sflphoned-managerimpl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-managerimpl.obj `if test -f 'managerimpl.cpp'; then $(CYGPATH_W) 'managerimpl.cpp'; else $(CYGPATH_W) '$(srcdir)/managerimpl.cpp'; fi`

sflphoned-observer.o: observer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-observer.o -MD -MP -MF "$(DEPDIR)/sflphoned-observer.Tpo" -c -o sflphoned-observer.o `test -f 'observer.cpp' || echo '$(srcdir)/'`observer.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-observer.Tpo" "$(DEPDIR)/sflphoned-observer.Po"; else rm -f "$(DEPDIR)/sflphoned-observer.Tpo"; exit 1; fi
#	source='observer.cpp' object='sflphoned-observer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-observer.o `test -f 'observer.cpp' || echo '$(srcdir)/'`observer.cpp

sflphoned-observer.obj: observer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-observer.obj -MD -MP -MF "$(DEPDIR)/sflphoned-observer.Tpo" -c -o sflphoned-observer.obj `if test -f 'observer.cpp'; then $(CYGPATH_W) 'observer.cpp'; else $(CYGPATH_W) '$(srcdir)/observer.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-observer.Tpo" "$(DEPDIR)/sflphoned-observer.Po"; else rm -f "$(DEPDIR)/sflphoned-observer.Tpo"; exit 1; fi
#	source='observer.cpp' object='sflphoned-observer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-observer.obj `if test -f 'observer.cpp'; then $(CYGPATH_W) 'observer.cpp'; else $(CYGPATH_W) '$(srcdir)/observer.cpp'; fi`

sflphoned-samplerateconverter.o: samplerateconverter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-samplerateconverter.o -MD -MP -MF "$(DEPDIR)/sflphoned-samplerateconverter.Tpo" -c -o sflphoned-samplerateconverter.o `test -f 'samplerateconverter.cpp' || echo '$(srcdir)/'`samplerateconverter.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-samplerateconverter.Tpo" "$(DEPDIR)/sflphoned-samplerateconverter.Po"; else rm -f "$(DEPDIR)/sflphoned-samplerateconverter.Tpo"; exit 1; fi
#	source='samplerateconverter.cpp' object='sflphoned-samplerateconverter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-samplerateconverter.o `test -f 'samplerateconverter.cpp' || echo '$(srcdir)/'`samplerateconverter.cpp

sflphoned-samplerateconverter.obj: samplerateconverter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-samplerateconverter.obj -MD -MP -MF "$(DEPDIR)/sflphoned-samplerateconverter.Tpo" -c -o sflphoned-samplerateconverter.obj `if test -f 'samplerateconverter.cpp'; then $(CYGPATH_W) 'samplerateconverter.cpp'; else $(CYGPATH_W) '$(srcdir)/samplerateconverter.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-samplerateconverter.Tpo" "$(DEPDIR)/sflphoned-samplerateconverter.Po"; else rm -f "$(DEPDIR)/sflphoned-samplerateconverter.Tpo"; exit 1; fi
#	source='samplerateconverter.cpp' object='sflphoned-samplerateconverter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-samplerateconverter.obj `if test -f 'samplerateconverter.cpp'; then $(CYGPATH_W) 'samplerateconverter.cpp'; else $(CYGPATH_W) '$(srcdir)/samplerateconverter.cpp'; fi`

sflphoned-eventthread.o: eventthread.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-eventthread.o -MD -MP -MF "$(DEPDIR)/sflphoned-eventthread.Tpo" -c -o sflphoned-eventthread.o `test -f 'eventthread.cpp' || echo '$(srcdir)/'`eventthread.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-eventthread.Tpo" "$(DEPDIR)/sflphoned-eventthread.Po"; else rm -f "$(DEPDIR)/sflphoned-eventthread.Tpo"; exit 1; fi
#	source='eventthread.cpp' object='sflphoned-eventthread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-eventthread.o `test -f 'eventthread.cpp' || echo '$(srcdir)/'`eventthread.cpp

sflphoned-eventthread.obj: eventthread.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-eventthread.obj -MD -MP -MF "$(DEPDIR)/sflphoned-eventthread.Tpo" -c -o sflphoned-eventthread.obj `if test -f 'eventthread.cpp'; then $(CYGPATH_W) 'eventthread.cpp'; else $(CYGPATH_W) '$(srcdir)/eventthread.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-eventthread.Tpo" "$(DEPDIR)/sflphoned-eventthread.Po"; else rm -f "$(DEPDIR)/sflphoned-eventthread.Tpo"; exit 1; fi
#	source='eventthread.cpp' object='sflphoned-eventthread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-eventthread.obj `if test -f 'eventthread.cpp'; then $(CYGPATH_W) 'eventthread.cpp'; else $(CYGPATH_W) '$(srcdir)/eventthread.cpp'; fi`

sflphoned-sipaccount.o: sipaccount.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-sipaccount.o -MD -MP -MF "$(DEPDIR)/sflphoned-sipaccount.Tpo" -c -o sflphoned-sipaccount.o `test -f 'sipaccount.cpp' || echo '$(srcdir)/'`sipaccount.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-sipaccount.Tpo" "$(DEPDIR)/sflphoned-sipaccount.Po"; else rm -f "$(DEPDIR)/sflphoned-sipaccount.Tpo"; exit 1; fi
#	source='sipaccount.cpp' object='sflphoned-sipaccount.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-sipaccount.o `test -f 'sipaccount.cpp' || echo '$(srcdir)/'`sipaccount.cpp

sflphoned-sipaccount.obj: sipaccount.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-sipaccount.obj -MD -MP -MF "$(DEPDIR)/sflphoned-sipaccount.Tpo" -c -o sflphoned-sipaccount.obj `if test -f 'sipaccount.cpp'; then $(CYGPATH_W) 'sipaccount.cpp'; else $(CYGPATH_W) '$(srcdir)/sipaccount.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-sipaccount.Tpo" "$(DEPDIR)/sflphoned-sipaccount.Po"; else rm -f "$(DEPDIR)/sflphoned-sipaccount.Tpo"; exit 1; fi
#	source='sipaccount.cpp' object='sflphoned-sipaccount.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-sipaccount.obj `if test -f 'sipaccount.cpp'; then $(CYGPATH_W) 'sipaccount.cpp'; else $(CYGPATH_W) '$(srcdir)/sipaccount.cpp'; fi`

sflphoned-accountcreator.o: accountcreator.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-accountcreator.o -MD -MP -MF "$(DEPDIR)/sflphoned-accountcreator.Tpo" -c -o sflphoned-accountcreator.o `test -f 'accountcreator.cpp' || echo '$(srcdir)/'`accountcreator.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-accountcreator.Tpo" "$(DEPDIR)/sflphoned-accountcreator.Po"; else rm -f "$(DEPDIR)/sflphoned-accountcreator.Tpo"; exit 1; fi
#	source='accountcreator.cpp' object='sflphoned-accountcreator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-accountcreator.o `test -f 'accountcreator.cpp' || echo '$(srcdir)/'`accountcreator.cpp

sflphoned-accountcreator.obj: accountcreator.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-accountcreator.obj -MD -MP -MF "$(DEPDIR)/sflphoned-accountcreator.Tpo" -c -o sflphoned-accountcreator.obj `if test -f 'accountcreator.cpp'; then $(CYGPATH_W) 'accountcreator.cpp'; else $(CYGPATH_W) '$(srcdir)/accountcreator.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-accountcreator.Tpo" "$(DEPDIR)/sflphoned-accountcreator.Po"; else rm -f "$(DEPDIR)/sflphoned-accountcreator.Tpo"; exit 1; fi
#	source='accountcreator.cpp' object='sflphoned-accountcreator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-accountcreator.obj `if test -f 'accountcreator.cpp'; then $(CYGPATH_W) 'accountcreator.cpp'; else $(CYGPATH_W) '$(srcdir)/accountcreator.cpp'; fi`

sflphoned-sipvoiplink.o: sipvoiplink.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-sipvoiplink.o -MD -MP -MF "$(DEPDIR)/sflphoned-sipvoiplink.Tpo" -c -o sflphoned-sipvoiplink.o `test -f 'sipvoiplink.cpp' || echo '$(srcdir)/'`sipvoiplink.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-sipvoiplink.Tpo" "$(DEPDIR)/sflphoned-sipvoiplink.Po"; else rm -f "$(DEPDIR)/sflphoned-sipvoiplink.Tpo"; exit 1; fi
#	source='sipvoiplink.cpp' object='sflphoned-sipvoiplink.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-sipvoiplink.o `test -f 'sipvoiplink.cpp' || echo '$(srcdir)/'`sipvoiplink.cpp

sflphoned-sipvoiplink.obj: sipvoiplink.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-sipvoiplink.obj -MD -MP -MF "$(DEPDIR)/sflphoned-sipvoiplink.Tpo" -c -o sflphoned-sipvoiplink.obj `if test -f 'sipvoiplink.cpp'; then $(CYGPATH_W) 'sipvoiplink.cpp'; else $(CYGPATH_W) '$(srcdir)/sipvoiplink.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-sipvoiplink.Tpo" "$(DEPDIR)/sflphoned-sipvoiplink.Po"; else rm -f "$(DEPDIR)/sflphoned-sipvoiplink.Tpo"; exit 1; fi
#	source='sipvoiplink.cpp' object='sflphoned-sipvoiplink.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-sipvoiplink.obj `if test -f 'sipvoiplink.cpp'; then $(CYGPATH_W) 'sipvoiplink.cpp'; else $(CYGPATH_W) '$(srcdir)/sipvoiplink.cpp'; fi`

sflphoned-call.o: call.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-call.o -MD -MP -MF "$(DEPDIR)/sflphoned-call.Tpo" -c -o sflphoned-call.o `test -f 'call.cpp' || echo '$(srcdir)/'`call.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-call.Tpo" "$(DEPDIR)/sflphoned-call.Po"; else rm -f "$(DEPDIR)/sflphoned-call.Tpo"; exit 1; fi
#	source='call.cpp' object='sflphoned-call.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-call.o `test -f 'call.cpp' || echo '$(srcdir)/'`call.cpp

sflphoned-call.obj: call.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-call.obj -MD -MP -MF "$(DEPDIR)/sflphoned-call.Tpo" -c -o sflphoned-call.obj `if test -f 'call.cpp'; then $(CYGPATH_W) 'call.cpp'; else $(CYGPATH_W) '$(srcdir)/call.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-call.Tpo" "$(DEPDIR)/sflphoned-call.Po"; else rm -f "$(DEPDIR)/sflphoned-call.Tpo"; exit 1; fi
#	source='call.cpp' object='sflphoned-call.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-call.obj `if test -f 'call.cpp'; then $(CYGPATH_W) 'call.cpp'; else $(CYGPATH_W) '$(srcdir)/call.cpp'; fi`

sflphoned-account.o: account.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-account.o -MD -MP -MF "$(DEPDIR)/sflphoned-account.Tpo" -c -o sflphoned-account.o `test -f 'account.cpp' || echo '$(srcdir)/'`account.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-account.Tpo" "$(DEPDIR)/sflphoned-account.Po"; else rm -f "$(DEPDIR)/sflphoned-account.Tpo"; exit 1; fi
#	source='account.cpp' object='sflphoned-account.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-account.o `test -f 'account.cpp' || echo '$(srcdir)/'`account.cpp

sflphoned-account.obj: account.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-account.obj -MD -MP -MF "$(DEPDIR)/sflphoned-account.Tpo" -c -o sflphoned-account.obj `if test -f 'account.cpp'; then $(CYGPATH_W) 'account.cpp'; else $(CYGPATH_W) '$(srcdir)/account.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-account.Tpo" "$(DEPDIR)/sflphoned-account.Po"; else rm -f "$(DEPDIR)/sflphoned-account.Tpo"; exit 1; fi
#	source='account.cpp' object='sflphoned-account.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-account.obj `if test -f 'account.cpp'; then $(CYGPATH_W) 'account.cpp'; else $(CYGPATH_W) '$(srcdir)/account.cpp'; fi`

sflphoned-sipcall.o: sipcall.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-sipcall.o -MD -MP -MF "$(DEPDIR)/sflphoned-sipcall.Tpo" -c -o sflphoned-sipcall.o `test -f 'sipcall.cpp' || echo '$(srcdir)/'`sipcall.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-sipcall.Tpo" "$(DEPDIR)/sflphoned-sipcall.Po"; else rm -f "$(DEPDIR)/sflphoned-sipcall.Tpo"; exit 1; fi
#	source='sipcall.cpp' object='sflphoned-sipcall.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-sipcall.o `test -f 'sipcall.cpp' || echo '$(srcdir)/'`sipcall.cpp

sflphoned-sipcall.obj: sipcall.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-sipcall.obj -MD -MP -MF "$(DEPDIR)/sflphoned-sipcall.Tpo" -c -o sflphoned-sipcall.obj `if test -f 'sipcall.cpp'; then $(CYGPATH_W) 'sipcall.cpp'; else $(CYGPATH_W) '$(srcdir)/sipcall.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-sipcall.Tpo" "$(DEPDIR)/sflphoned-sipcall.Po"; else rm -f "$(DEPDIR)/sflphoned-sipcall.Tpo"; exit 1; fi
#	source='sipcall.cpp' object='sflphoned-sipcall.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-sipcall.obj `if test -f 'sipcall.cpp'; then $(CYGPATH_W) 'sipcall.cpp'; else $(CYGPATH_W) '$(srcdir)/sipcall.cpp'; fi`

sflphoned-sdp.o: sdp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-sdp.o -MD -MP -MF "$(DEPDIR)/sflphoned-sdp.Tpo" -c -o sflphoned-sdp.o `test -f 'sdp.cpp' || echo '$(srcdir)/'`sdp.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-sdp.Tpo" "$(DEPDIR)/sflphoned-sdp.Po"; else rm -f "$(DEPDIR)/sflphoned-sdp.Tpo"; exit 1; fi
#	source='sdp.cpp' object='sflphoned-sdp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-sdp.o `test -f 'sdp.cpp' || echo '$(srcdir)/'`sdp.cpp

sflphoned-sdp.obj: sdp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-sdp.obj -MD -MP -MF "$(DEPDIR)/sflphoned-sdp.Tpo" -c -o sflphoned-sdp.obj `if test -f 'sdp.cpp'; then $(CYGPATH_W) 'sdp.cpp'; else $(CYGPATH_W) '$(srcdir)/sdp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-sdp.Tpo" "$(DEPDIR)/sflphoned-sdp.Po"; else rm -f "$(DEPDIR)/sflphoned-sdp.Tpo"; exit 1; fi
#	source='sdp.cpp' object='sflphoned-sdp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-sdp.obj `if test -f 'sdp.cpp'; then $(CYGPATH_W) 'sdp.cpp'; else $(CYGPATH_W) '$(srcdir)/sdp.cpp'; fi`

sflphoned-sdpmedia.o: sdpmedia.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-sdpmedia.o -MD -MP -MF "$(DEPDIR)/sflphoned-sdpmedia.Tpo" -c -o sflphoned-sdpmedia.o `test -f 'sdpmedia.cpp' || echo '$(srcdir)/'`sdpmedia.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-sdpmedia.Tpo" "$(DEPDIR)/sflphoned-sdpmedia.Po"; else rm -f "$(DEPDIR)/sflphoned-sdpmedia.Tpo"; exit 1; fi
#	source='sdpmedia.cpp' object='sflphoned-sdpmedia.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-sdpmedia.o `test -f 'sdpmedia.cpp' || echo '$(srcdir)/'`sdpmedia.cpp

sflphoned-sdpmedia.obj: sdpmedia.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-sdpmedia.obj -MD -MP -MF "$(DEPDIR)/sflphoned-sdpmedia.Tpo" -c -o sflphoned-sdpmedia.obj `if test -f 'sdpmedia.cpp'; then $(CYGPATH_W) 'sdpmedia.cpp'; else $(CYGPATH_W) '$(srcdir)/sdpmedia.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-sdpmedia.Tpo" "$(DEPDIR)/sflphoned-sdpmedia.Po"; else rm -f "$(DEPDIR)/sflphoned-sdpmedia.Tpo"; exit 1; fi
#	source='sdpmedia.cpp' object='sflphoned-sdpmedia.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-sdpmedia.obj `if test -f 'sdpmedia.cpp'; then $(CYGPATH_W) 'sdpmedia.cpp'; else $(CYGPATH_W) '$(srcdir)/sdpmedia.cpp'; fi`

sflphoned-numbercleaner.o: numbercleaner.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-numbercleaner.o -MD -MP -MF "$(DEPDIR)/sflphoned-numbercleaner.Tpo" -c -o sflphoned-numbercleaner.o `test -f 'numbercleaner.cpp' || echo '$(srcdir)/'`numbercleaner.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-numbercleaner.Tpo" "$(DEPDIR)/sflphoned-numbercleaner.Po"; else rm -f "$(DEPDIR)/sflphoned-numbercleaner.Tpo"; exit 1; fi
#	source='numbercleaner.cpp' object='sflphoned-numbercleaner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-numbercleaner.o `test -f 'numbercleaner.cpp' || echo '$(srcdir)/'`numbercleaner.cpp

sflphoned-numbercleaner.obj: numbercleaner.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-numbercleaner.obj -MD -MP -MF "$(DEPDIR)/sflphoned-numbercleaner.Tpo" -c -o sflphoned-numbercleaner.obj `if test -f 'numbercleaner.cpp'; then $(CYGPATH_W) 'numbercleaner.cpp'; else $(CYGPATH_W) '$(srcdir)/numbercleaner.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-numbercleaner.Tpo" "$(DEPDIR)/sflphoned-numbercleaner.Po"; else rm -f "$(DEPDIR)/sflphoned-numbercleaner.Tpo"; exit 1; fi
#	source='numbercleaner.cpp' object='sflphoned-numbercleaner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-numbercleaner.obj `if test -f 'numbercleaner.cpp'; then $(CYGPATH_W) 'numbercleaner.cpp'; else $(CYGPATH_W) '$(srcdir)/numbercleaner.cpp'; fi`

sflphoned-iaxaccount.o: iaxaccount.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-iaxaccount.o -MD -MP -MF "$(DEPDIR)/sflphoned-iaxaccount.Tpo" -c -o sflphoned-iaxaccount.o `test -f 'iaxaccount.cpp' || echo '$(srcdir)/'`iaxaccount.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-iaxaccount.Tpo" "$(DEPDIR)/sflphoned-iaxaccount.Po"; else rm -f "$(DEPDIR)/sflphoned-iaxaccount.Tpo"; exit 1; fi
#	source='iaxaccount.cpp' object='sflphoned-iaxaccount.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-iaxaccount.o `test -f 'iaxaccount.cpp' || echo '$(srcdir)/'`iaxaccount.cpp

sflphoned-iaxaccount.obj: iaxaccount.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-iaxaccount.obj -MD -MP -MF "$(DEPDIR)/sflphoned-iaxaccount.Tpo" -c -o sflphoned-iaxaccount.obj `if test -f 'iaxaccount.cpp'; then $(CYGPATH_W) 'iaxaccount.cpp'; else $(CYGPATH_W) '$(srcdir)/iaxaccount.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-iaxaccount.Tpo" "$(DEPDIR)/sflphoned-iaxaccount.Po"; else rm -f "$(DEPDIR)/sflphoned-iaxaccount.Tpo"; exit 1; fi
#	source='iaxaccount.cpp' object='sflphoned-iaxaccount.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-iaxaccount.obj `if test -f 'iaxaccount.cpp'; then $(CYGPATH_W) 'iaxaccount.cpp'; else $(CYGPATH_W) '$(srcdir)/iaxaccount.cpp'; fi`

sflphoned-iaxvoiplink.o: iaxvoiplink.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-iaxvoiplink.o -MD -MP -MF "$(DEPDIR)/sflphoned-iaxvoiplink.Tpo" -c -o sflphoned-iaxvoiplink.o `test -f 'iaxvoiplink.cpp' || echo '$(srcdir)/'`iaxvoiplink.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-iaxvoiplink.Tpo" "$(DEPDIR)/sflphoned-iaxvoiplink.Po"; else rm -f "$(DEPDIR)/sflphoned-iaxvoiplink.Tpo"; exit 1; fi
#	source='iaxvoiplink.cpp' object='sflphoned-iaxvoiplink.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-iaxvoiplink.o `test -f 'iaxvoiplink.cpp' || echo '$(srcdir)/'`iaxvoiplink.cpp

sflphoned-iaxvoiplink.obj: iaxvoiplink.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-iaxvoiplink.obj -MD -MP -MF "$(DEPDIR)/sflphoned-iaxvoiplink.Tpo" -c -o sflphoned-iaxvoiplink.obj `if test -f 'iaxvoiplink.cpp'; then $(CYGPATH_W) 'iaxvoiplink.cpp'; else $(CYGPATH_W) '$(srcdir)/iaxvoiplink.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-iaxvoiplink.Tpo" "$(DEPDIR)/sflphoned-iaxvoiplink.Po"; else rm -f "$(DEPDIR)/sflphoned-iaxvoiplink.Tpo"; exit 1; fi
#	source='iaxvoiplink.cpp' object='sflphoned-iaxvoiplink.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-iaxvoiplink.obj `if test -f 'iaxvoiplink.cpp'; then $(CYGPATH_W) 'iaxvoiplink.cpp'; else $(CYGPATH_W) '$(srcdir)/iaxvoiplink.cpp'; fi`

sflphoned-iaxcall.o: iaxcall.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-iaxcall.o -MD -MP -MF "$(DEPDIR)/sflphoned-iaxcall.Tpo" -c -o sflphoned-iaxcall.o `test -f 'iaxcall.cpp' || echo '$(srcdir)/'`iaxcall.cpp; \
	then mv -f "$(DEPDIR)/sflphoned-iaxcall.Tpo" "$(DEPDIR)/sflphoned-iaxcall.Po"; else rm -f "$(DEPDIR)/sflphoned-iaxcall.Tpo"; exit 1; fi
#	source='iaxcall.cpp' object='sflphoned-iaxcall.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-iaxcall.o `test -f 'iaxcall.cpp' || echo '$(srcdir)/'`iaxcall.cpp

sflphoned-iaxcall.obj: iaxcall.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -MT sflphoned-iaxcall.obj -MD -MP -MF "$(DEPDIR)/sflphoned-iaxcall.Tpo" -c -o sflphoned-iaxcall.obj `if test -f 'iaxcall.cpp'; then $(CYGPATH_W) 'iaxcall.cpp'; else $(CYGPATH_W) '$(srcdir)/iaxcall.cpp'; fi`; \
	then mv -f "$(DEPDIR)/sflphoned-iaxcall.Tpo" "$(DEPDIR)/sflphoned-iaxcall.Po"; else rm -f "$(DEPDIR)/sflphoned-iaxcall.Tpo"; exit 1; fi
#	source='iaxcall.cpp' object='sflphoned-iaxcall.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sflphoned_CXXFLAGS) $(CXXFLAGS) -c -o sflphoned-iaxcall.obj `if test -f 'iaxcall.cpp'; then $(CYGPATH_W) 'iaxcall.cpp'; else $(CYGPATH_W) '$(srcdir)/iaxcall.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
