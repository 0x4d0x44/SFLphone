/* Generated by dbus-binding-tool; do not edit! */

#include <glib/gtypes.h>
#include <glib/gerror.h>
#include <dbus/dbus-glib.h>

G_BEGIN_DECLS

#ifndef DBUS_GLIB_CLIENT_WRAPPERS_org_sflphone_SFLphone_ContactManager
#define DBUS_GLIB_CLIENT_WRAPPERS_org_sflphone_SFLphone_ContactManager

static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_sflphone_SFLphone_ContactManager_get_contacts (DBusGProxy *proxy, const char * IN_accountID, char *** OUT_contactIDs, GError **error)

{
  return dbus_g_proxy_call (proxy, "getContacts", error, G_TYPE_STRING, IN_accountID, G_TYPE_INVALID, G_TYPE_STRV, OUT_contactIDs, G_TYPE_INVALID);
}

typedef void (*org_sflphone_SFLphone_ContactManager_get_contacts_reply) (DBusGProxy *proxy, char * *OUT_contactIDs, GError *error, gpointer userdata);

static void
org_sflphone_SFLphone_ContactManager_get_contacts_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char ** OUT_contactIDs;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRV, &OUT_contactIDs, G_TYPE_INVALID);
  (*(org_sflphone_SFLphone_ContactManager_get_contacts_reply)data->cb) (proxy, OUT_contactIDs, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_sflphone_SFLphone_ContactManager_get_contacts_async (DBusGProxy *proxy, const char * IN_accountID, org_sflphone_SFLphone_ContactManager_get_contacts_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "getContacts", org_sflphone_SFLphone_ContactManager_get_contacts_async_callback, stuff, g_free, G_TYPE_STRING, IN_accountID, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_sflphone_SFLphone_ContactManager_get_contact_details (DBusGProxy *proxy, const char * IN_accountID, const char * IN_contactID, char *** OUT_details, GError **error)

{
  return dbus_g_proxy_call (proxy, "getContactDetails", error, G_TYPE_STRING, IN_accountID, G_TYPE_STRING, IN_contactID, G_TYPE_INVALID, G_TYPE_STRV, OUT_details, G_TYPE_INVALID);
}

typedef void (*org_sflphone_SFLphone_ContactManager_get_contact_details_reply) (DBusGProxy *proxy, char * *OUT_details, GError *error, gpointer userdata);

static void
org_sflphone_SFLphone_ContactManager_get_contact_details_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char ** OUT_details;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRV, &OUT_details, G_TYPE_INVALID);
  (*(org_sflphone_SFLphone_ContactManager_get_contact_details_reply)data->cb) (proxy, OUT_details, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_sflphone_SFLphone_ContactManager_get_contact_details_async (DBusGProxy *proxy, const char * IN_accountID, const char * IN_contactID, org_sflphone_SFLphone_ContactManager_get_contact_details_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "getContactDetails", org_sflphone_SFLphone_ContactManager_get_contact_details_async_callback, stuff, g_free, G_TYPE_STRING, IN_accountID, G_TYPE_STRING, IN_contactID, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_sflphone_SFLphone_ContactManager_get_contact_entries (DBusGProxy *proxy, const char * IN_accountID, const char * IN_contactID, char *** OUT_contactEntryIDs, GError **error)

{
  return dbus_g_proxy_call (proxy, "getContactEntries", error, G_TYPE_STRING, IN_accountID, G_TYPE_STRING, IN_contactID, G_TYPE_INVALID, G_TYPE_STRV, OUT_contactEntryIDs, G_TYPE_INVALID);
}

typedef void (*org_sflphone_SFLphone_ContactManager_get_contact_entries_reply) (DBusGProxy *proxy, char * *OUT_contactEntryIDs, GError *error, gpointer userdata);

static void
org_sflphone_SFLphone_ContactManager_get_contact_entries_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char ** OUT_contactEntryIDs;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRV, &OUT_contactEntryIDs, G_TYPE_INVALID);
  (*(org_sflphone_SFLphone_ContactManager_get_contact_entries_reply)data->cb) (proxy, OUT_contactEntryIDs, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_sflphone_SFLphone_ContactManager_get_contact_entries_async (DBusGProxy *proxy, const char * IN_accountID, const char * IN_contactID, org_sflphone_SFLphone_ContactManager_get_contact_entries_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "getContactEntries", org_sflphone_SFLphone_ContactManager_get_contact_entries_async_callback, stuff, g_free, G_TYPE_STRING, IN_accountID, G_TYPE_STRING, IN_contactID, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_sflphone_SFLphone_ContactManager_get_contact_entry_details (DBusGProxy *proxy, const char * IN_accountID, const char * IN_contactID, const char * IN_contactEntryID, char *** OUT_details, GError **error)

{
  return dbus_g_proxy_call (proxy, "getContactEntryDetails", error, G_TYPE_STRING, IN_accountID, G_TYPE_STRING, IN_contactID, G_TYPE_STRING, IN_contactEntryID, G_TYPE_INVALID, G_TYPE_STRV, OUT_details, G_TYPE_INVALID);
}

typedef void (*org_sflphone_SFLphone_ContactManager_get_contact_entry_details_reply) (DBusGProxy *proxy, char * *OUT_details, GError *error, gpointer userdata);

static void
org_sflphone_SFLphone_ContactManager_get_contact_entry_details_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char ** OUT_details;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRV, &OUT_details, G_TYPE_INVALID);
  (*(org_sflphone_SFLphone_ContactManager_get_contact_entry_details_reply)data->cb) (proxy, OUT_details, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_sflphone_SFLphone_ContactManager_get_contact_entry_details_async (DBusGProxy *proxy, const char * IN_accountID, const char * IN_contactID, const char * IN_contactEntryID, org_sflphone_SFLphone_ContactManager_get_contact_entry_details_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "getContactEntryDetails", org_sflphone_SFLphone_ContactManager_get_contact_entry_details_async_callback, stuff, g_free, G_TYPE_STRING, IN_accountID, G_TYPE_STRING, IN_contactID, G_TYPE_STRING, IN_contactEntryID, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_sflphone_SFLphone_ContactManager_set_contacts (DBusGProxy *proxy, const char * IN_accountID, const char ** IN_details, GError **error)

{
  return dbus_g_proxy_call (proxy, "setContacts", error, G_TYPE_STRING, IN_accountID, G_TYPE_STRV, IN_details, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_sflphone_SFLphone_ContactManager_set_contacts_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_sflphone_SFLphone_ContactManager_set_contacts_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_sflphone_SFLphone_ContactManager_set_contacts_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_sflphone_SFLphone_ContactManager_set_contacts_async (DBusGProxy *proxy, const char * IN_accountID, const char ** IN_details, org_sflphone_SFLphone_ContactManager_set_contacts_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "setContacts", org_sflphone_SFLphone_ContactManager_set_contacts_async_callback, stuff, g_free, G_TYPE_STRING, IN_accountID, G_TYPE_STRV, IN_details, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_sflphone_SFLphone_ContactManager_set_contact_entries (DBusGProxy *proxy, const char * IN_contactID, const char ** IN_details, GError **error)

{
  return dbus_g_proxy_call (proxy, "setContactEntries", error, G_TYPE_STRING, IN_contactID, G_TYPE_STRV, IN_details, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_sflphone_SFLphone_ContactManager_set_contact_entries_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_sflphone_SFLphone_ContactManager_set_contact_entries_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_sflphone_SFLphone_ContactManager_set_contact_entries_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_sflphone_SFLphone_ContactManager_set_contact_entries_async (DBusGProxy *proxy, const char * IN_contactID, const char ** IN_details, org_sflphone_SFLphone_ContactManager_set_contact_entries_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "setContactEntries", org_sflphone_SFLphone_ContactManager_set_contact_entries_async_callback, stuff, g_free, G_TYPE_STRING, IN_contactID, G_TYPE_STRV, IN_details, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_sflphone_SFLphone_ContactManager_set_presence (DBusGProxy *proxy, const char * IN_accountID, const char * IN_presence, const char * IN_additionalInfo, GError **error)

{
  return dbus_g_proxy_call (proxy, "setPresence", error, G_TYPE_STRING, IN_accountID, G_TYPE_STRING, IN_presence, G_TYPE_STRING, IN_additionalInfo, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_sflphone_SFLphone_ContactManager_set_presence_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_sflphone_SFLphone_ContactManager_set_presence_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_sflphone_SFLphone_ContactManager_set_presence_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_sflphone_SFLphone_ContactManager_set_presence_async (DBusGProxy *proxy, const char * IN_accountID, const char * IN_presence, const char * IN_additionalInfo, org_sflphone_SFLphone_ContactManager_set_presence_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "setPresence", org_sflphone_SFLphone_ContactManager_set_presence_async_callback, stuff, g_free, G_TYPE_STRING, IN_accountID, G_TYPE_STRING, IN_presence, G_TYPE_STRING, IN_additionalInfo, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_sflphone_SFLphone_ContactManager_set_contact_presence (DBusGProxy *proxy, const char * IN_accountID, const char * IN_presence, const char * IN_additionalInfo, GError **error)

{
  return dbus_g_proxy_call (proxy, "setContactPresence", error, G_TYPE_STRING, IN_accountID, G_TYPE_STRING, IN_presence, G_TYPE_STRING, IN_additionalInfo, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_sflphone_SFLphone_ContactManager_set_contact_presence_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_sflphone_SFLphone_ContactManager_set_contact_presence_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_sflphone_SFLphone_ContactManager_set_contact_presence_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_sflphone_SFLphone_ContactManager_set_contact_presence_async (DBusGProxy *proxy, const char * IN_accountID, const char * IN_presence, const char * IN_additionalInfo, org_sflphone_SFLphone_ContactManager_set_contact_presence_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "setContactPresence", org_sflphone_SFLphone_ContactManager_set_contact_presence_async_callback, stuff, g_free, G_TYPE_STRING, IN_accountID, G_TYPE_STRING, IN_presence, G_TYPE_STRING, IN_additionalInfo, G_TYPE_INVALID);
}
#endif /* defined DBUS_GLIB_CLIENT_WRAPPERS_org_sflphone_SFLphone_ContactManager */

G_END_DECLS
