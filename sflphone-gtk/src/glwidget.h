/* Generated by Together */

#ifndef GLWIDGET_H
#define GLWIDGET_H

#include <gtk/gtkgl.h>
#include <GL/gl.h>
#include <GL/glu.h>

#include "MemManager.h"

//! Memory manager
//MemManager* sharedMemory;

//! Key to access the shared Memory space that refers to the remote data
MemKey* remoteKey;

//! Key to access the shared Memory space that refers to the local data
MemKey* localKey;

//! Remote data buffer
MemData* remoteBuff;

//! Local data buffer
MemData* localBuff;

//! Configuration information for the gl widget
GdkGLConfig* glconfig;

//! The glwidget it self
GtkWidget* drawing_area;

//! Callback Function to draw the content of the widget
/*!
 * \param widget a pointer to the widget being drawned
 * \param data data on the call back
 * \return the success of the operation
 */
gboolean draw(GtkWidget* widget, gpointer data);

//! Callback Function to reshape the content of the widget
/*!
 * \param widget a pointer to the widget being drawned
 * \param ev a pointer to the event data
 * \param data data on the call back
 * \return the success of the operation
 */
gboolean reshape(GtkWidget* widget, GdkEventConfigure* ev, gpointer data);

//! Callback Function to initialise the content of the widget
/*!
 * \param widget a pointer to the widget being drawned
 * \param data data on the call back
 * \return the success of the operation
 */
gboolean init(GtkWidget* widget, gpointer data);

//! Function to force a redraw of the widget
void redraw(GtkWidget* widget);

//! Function that creates the opengl widget with all the proper information
/*!
 * \return the created widget
 */
GtkWidget* createGLWidget();

//! Draws the images from the local capture source
/*!
 * \param widget a pointer to the widget being drawned
 * \param data data on the call back
 * \param glContext the context of the glwidget
 * \param glDrawable the drawing info of the glwidget
 * \return the success of the operation
 */
gboolean drawLocal(GtkWidget* widget, gpointer data, GdkGLContext *glContext, GdkGLDrawable *glDrawable);


//! Draws the images from the remote source
/*!
 * \param widget a pointer to the widget being drawned
 * \param data data on the call back
 * \param glContext the context of the glwidget
 * \param glDrawable the drawing info of the glwidget
 * \return the success of the operation
 */
gboolean drawRemote(GtkWidget* widget, gpointer data, GdkGLContext *glContext, GdkGLDrawable *glDrawable);

/**
 * Intitializes the shred memory spaces
 * @param local A pointer to the local key in a caracter format
 * @param remote A pointer to the remote key in a caracter format
 */
gboolean InitMemSpaces( char* local, char* remote );

/**
 * Destroys the memspaces
 */
gboolean DestroyMemSpaces();

#endif //GLWIDGET_H
